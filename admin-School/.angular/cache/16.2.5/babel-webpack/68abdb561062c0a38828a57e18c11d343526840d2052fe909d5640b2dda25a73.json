{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../classeroom.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../matiere.service\";\nimport * as i4 from \"@angular/common\";\nfunction MatiereComponent_div_2_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \"1\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵelement(10, \"i\", 7);\n    i0.ɵɵelementStart(11, \"i\", 8);\n    i0.ɵɵlistener(\"click\", function MatiereComponent_div_2_tr_15_Template_i_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const matiere_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.onItemClick(matiere_r3._id));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const matiere_r3 = ctx.$implicit;\n    const classroom_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(classroom_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(matiere_r3.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(matiere_r3.note);\n  }\n}\nfunction MatiereComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"table\", 4)(2, \"thead\")(3, \"tr\")(4, \"th\", 5);\n    i0.ɵɵtext(5, \"#\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\", 5);\n    i0.ɵɵtext(7, \"Nom de Classe \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\", 5);\n    i0.ɵɵtext(9, \"Matiere\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\", 5);\n    i0.ɵɵtext(11, \"Note\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"th\", 5);\n    i0.ɵɵtext(13, \"Actions\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(14, \"tbody\");\n    i0.ɵɵtemplate(15, MatiereComponent_div_2_tr_15_Template, 12, 3, \"tr\", 6);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const classroom_r1 = ctx.$implicit;\n    i0.ɵɵadvance(15);\n    i0.ɵɵproperty(\"ngForOf\", classroom_r1.matieres);\n  }\n}\nexport class MatiereComponent {\n  constructor(Cla, router, mta) {\n    this.Cla = Cla;\n    this.router = router;\n    this.mta = mta;\n    this.receivedId = '';\n    this.name = '';\n    this.note = '';\n    this.classeroom = \"\";\n    this.Classes = [];\n    this.Matieres = [];\n  }\n  ngOnInit() {\n    this.Cla.getClasse().subscribe(classe => {\n      this.Classes = classe;\n      console.log(this.Classes);\n    });\n  }\n  ajMata() {\n    this.mta.ajMatiere(this.name, this.note).subscribe(response => {\n      const matiereId = response.body.matiereId; // Access the generated matiere ID from the response\n      //console.log('matiere ID:', matiereId);\n      //console.log('classeroom ID',this.classeroom);\n      //this.Matieres.push(response)\n      this.Cla.updateClassroomAndAddMatiere(this.classeroom, matiereId).subscribe(updatedClassroom => {\n        // console.log('Classroom updated successfully:', updatedClassroom);\n        this.Classes.push(updatedClassroom);\n        // console.log(this.Classes.push(updatedClassroom));\n        this.fetchdata();\n      }, error => {\n        console.error('Error:', error);\n        // Handle error\n      });\n    }, error => {\n      console.error('Error:', error);\n      // Handle error\n    });\n  }\n\n  onItemClick(itemId) {\n    this.receivedId = itemId;\n  }\n  onDeleteMatiere(id) {\n    this.mta.deleteMatiereById(id).subscribe(() => {\n      // Handle success, e.g., refresh the list of Matieres\n      console.log('Matiere deleted successfully');\n      this.fetchdata();\n    }, error => {\n      // Handle error, e.g., display an error message\n      console.error('Error deleting Matiere:', error);\n    });\n  }\n  fetchdata() {\n    this.Cla.getClasse().subscribe(classe => {\n      this.Classes = classe;\n      //console.log(this.Classes);\n    });\n  }\n  static #_ = this.ɵfac = function MatiereComponent_Factory(t) {\n    return new (t || MatiereComponent)(i0.ɵɵdirectiveInject(i1.ClasseroomService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.MatiereService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MatiereComponent,\n    selectors: [[\"app-matiere\"]],\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"container\"], [1, \"row\", \"gx-5\"], [\"class\", \"col-6\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-6\"], [1, \"table\", \"table-hover\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [1, \"fas\", \"fa-pen\", \"text-primary\", \"cursor-pointer\"], [1, \"fas\", \"fa-trash\", \"text-danger\", \"cursor-pointer\", 3, \"click\"]],\n    template: function MatiereComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtemplate(2, MatiereComponent_div_2_Template, 16, 1, \"div\", 2);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.Classes);\n      }\n    },\n    dependencies: [i4.NgForOf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","MatiereComponent_div_2_tr_15_Template_i_click_11_listener","restoredCtx","ɵɵrestoreView","_r5","matiere_r3","$implicit","ctx_r4","ɵɵnextContext","ɵɵresetView","onItemClick","_id","ɵɵadvance","ɵɵtextInterpolate","classroom_r1","name","note","ɵɵtemplate","MatiereComponent_div_2_tr_15_Template","ɵɵproperty","matieres","MatiereComponent","constructor","Cla","router","mta","receivedId","classeroom","Classes","Matieres","ngOnInit","getClasse","subscribe","classe","console","log","ajMata","ajMatiere","response","matiereId","body","updateClassroomAndAddMatiere","updatedClassroom","push","fetchdata","error","itemId","onDeleteMatiere","id","deleteMatiereById","_","ɵɵdirectiveInject","i1","ClasseroomService","i2","Router","i3","MatiereService","_2","selectors","decls","vars","consts","template","MatiereComponent_Template","rf","ctx","MatiereComponent_div_2_Template"],"sources":["C:\\Users\\Mehdi\\Desktop\\Angular\\admin-School\\src\\app\\matiere\\matiere.component.ts","C:\\Users\\Mehdi\\Desktop\\Angular\\admin-School\\src\\app\\matiere\\matiere.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ClasseroomService } from '../classeroom.service';\nimport { Router } from '@angular/router';\nimport { IClassroom } from 'src/models';\nimport { MatiereService } from '../matiere.service';\n\n@Component({\n  selector: 'app-matiere',\n  templateUrl: './matiere.component.html',\n  styleUrls: ['./matiere.component.css']\n})\nexport class MatiereComponent implements OnInit{\n  receivedId=''\n  name:String='';\n  note:String='';\n  classeroom:String=\"\"\n  Classes:IClassroom[]=[]\n  Matieres:String[]=[]\n  constructor(private Cla:ClasseroomService,private router:Router,private mta:MatiereService){}\n  ngOnInit(): void {\n    this.Cla.getClasse()\n    .subscribe(classe =>{\n      this.Classes = classe\n      console.log(this.Classes);\n    });\n    \n  }\n  ajMata(){\n    this.mta.ajMatiere(this.name,this.note).subscribe(\n      (response) => {\n        const matiereId = response.body.matiereId // Access the generated matiere ID from the response\n        //console.log('matiere ID:', matiereId);\n        //console.log('classeroom ID',this.classeroom);\n        //this.Matieres.push(response)\n       \n        \n        this.Cla.updateClassroomAndAddMatiere(this.classeroom, matiereId).subscribe(\n          (updatedClassroom) => {\n           // console.log('Classroom updated successfully:', updatedClassroom);\n            this.Classes.push(updatedClassroom)\n           // console.log(this.Classes.push(updatedClassroom));\n           this.fetchdata()\n          },\n          (error) => {\n            console.error('Error:', error);\n            // Handle error\n          }\n        );\n      },\n      (error) => {\n        console.error('Error:', error);\n        // Handle error\n      }\n    );\n  }\n  onItemClick(itemId: string) {\n    this.receivedId = itemId;\n  }\n    onDeleteMatiere(id: string): void {\n      this.mta.deleteMatiereById(id).subscribe(\n        () => {\n          // Handle success, e.g., refresh the list of Matieres\n          console.log('Matiere deleted successfully');\n          this.fetchdata()\n        },\n        (error) => {\n          // Handle error, e.g., display an error message\n          console.error('Error deleting Matiere:', error);\n        }\n      );\n    }\n\n    fetchdata(){\n      this.Cla.getClasse()\n    .subscribe(classe =>{\n      this.Classes = classe\n      //console.log(this.Classes);\n    });\n    }\n}\n","<div class=\"container\">\n    <div class=\"row gx-5\">\n      <div class=\"col-6\" *ngFor=\"let classroom of Classes\">\n<table class=\"table table-hover\">\n    <thead>\n        <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Nom de Classe </th>\n            <th scope=\"col\">Matiere</th>\n            <th scope=\"col\">Note</th>\n            <th scope=\"col\">Actions</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let matiere of classroom.matieres\">\n            <td>1</td>\n            <td>{{classroom.name}}</td>\n            <td>{{matiere.name}}</td>\n            <td>{{matiere.note}}</td>\n            <td>\n                <i class=\"fas fa-pen text-primary cursor-pointer\"></i>\n                <i class=\"fas fa-trash text-danger cursor-pointer\"(click)=\"onItemClick(matiere._id)\"></i>\n            </td>\n        </tr>\n    </tbody>\n</table>\n      </div>\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}