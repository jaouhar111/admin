{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../user.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../classeroom.service\";\nimport * as i5 from \"@angular/common\";\nfunction AdmissionComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"label\", 7);\n    i0.ɵɵtext(2, \"Code Etudient\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 27);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdmissionComponent_div_13_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", item_r5._id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r5.name);\n  }\n}\nfunction AdmissionComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"label\", 11);\n    i0.ɵɵtext(2, \"Choisire Classe\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"select\", 28);\n    i0.ɵɵtemplate(4, AdmissionComponent_div_13_option_4_Template, 2, 2, \"option\", 29);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.Classes);\n  }\n}\nfunction AdmissionComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"label\", 11);\n    i0.ɵɵtext(2, \"Type Utilisateur\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"select\", 31)(4, \"option\", 32);\n    i0.ɵɵtext(5, \"Professeur\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"option\", 33);\n    i0.ɵɵtext(7, \"personnel de direction\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"option\", 34);\n    i0.ɵɵtext(9, \"g\\u00E9rant de magasin\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"option\", 35);\n    i0.ɵɵtext(11, \"comptable\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction AdmissionComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"label\", 7);\n    i0.ɵɵtext(2, \"Salaire\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 36);\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AdmissionComponent {\n  constructor(userService, formBuilder, router, route, Cla) {\n    this.userService = userService;\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.route = route;\n    this.Cla = Cla;\n    this.dataType = '';\n    this.id = '';\n    this.users = [];\n    this.userForm = new FormGroup({});\n    this.Classes = [];\n    this.userForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      register: [''],\n      genre: ['', Validators.required],\n      dateN: ['', Validators.required],\n      adresse: ['', Validators.required],\n      role: ['Student', Validators.required],\n      father: ['', Validators.required],\n      profession: ['', Validators.required],\n      nationalId: ['', Validators.required],\n      education: ['', Validators.required],\n      mobile: ['', Validators.required],\n      email: ['', Validators.required],\n      password: ['', Validators.required],\n      salaire: [''],\n      classe: ['']\n    });\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.dataType = params['type'];\n      this.id = params['id']; // Will be 'student' or 'employee'\n    });\n\n    this.Cla.getClasse().subscribe(classe => {\n      this.Classes = classe;\n      console.log(this.Classes);\n    });\n  }\n  // Fetch and populate user data for editing\n  editUser() {\n    this.userService.getUserById(this.id).subscribe(user => {\n      this.userForm.patchValue(user); // Use patchValue to populate the form\n    });\n  }\n\n  addOrUpdateUser() {\n    if (this.userForm.valid) {\n      const newUser = this.userForm.value;\n      // Call the updateUser or createUser method from your user service\n      if (newUser.id) {\n        // If the user has an 'id', update the user\n        this.userService.updateUser(newUser.id, newUser).subscribe(updatedUser => {\n          console.log('User updated:', updatedUser);\n          this.userForm.reset();\n        });\n      } else {\n        // If the user doesn't have an 'id', it's a new user, so create them\n        this.userService.createUser(newUser).subscribe(addedUser => {\n          console.log('User added:', addedUser);\n          this.userForm.reset();\n        });\n      }\n    } else {\n      // Handle form validation errors\n    }\n  }\n  static #_ = this.ɵfac = function AdmissionComponent_Factory(t) {\n    return new (t || AdmissionComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.ClasseroomService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AdmissionComponent,\n    selectors: [[\"app-admission\"]],\n    decls: 70,\n    vars: 6,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"d-flex\", \"justify-content-between\", \"text-light\", \"py-2\", \"px-4\", \"bg-primary\", \"align-items-center\"], [1, \"\"], [1, \"required\"], [1, \"container\"], [1, \"row\", \"gx-5\"], [1, \"form-group\", \"col-4\"], [\"for\", \"exampleFormControlInput1\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", \"placeholder\", \"Nom Complete\", 1, \"form-control\"], [\"class\", \"form-group col-4\", 4, \"ngIf\"], [\"type\", \"date\", \"id\", \"dateN\", \"formControlName\", \"dateN\", 1, \"form-control\"], [\"for\", \"exampleFormControlSelect1\"], [\"id\", \"genre\", \"formControlName\", \"genre\", 1, \"form-control\"], [\"value\", \"Masculin\"], [\"value\", \"Feminin\"], [\"type\", \"text\", \"id\", \"adresse\", \"formControlName\", \"adresse\", \"placeholder\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"id\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"\", 1, \"form-control\"], [1, \"float-end\"], [1, \"row\", \"gap-x-5\"], [\"type\", \"text\", \"id\", \"father\", \"formControlName\", \"father\", \"placeholder\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"id\", \"nationalId\", \"formControlName\", \"nationalId\", \"placeholder\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"id\", \"profession\", \"formControlName\", \"profession\", \"placeholder\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"id\", \"education\", \"formControlName\", \"education\", \"placeholder\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"id\", \"mobile\", \"formControlName\", \"mobile\", \"placeholder\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"id\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"fas\", \"fa-user-plus\", \"mr-2\"], [\"type\", \"text\", \"id\", \"register\", \"formControlName\", \"register\", \"placeholder\", \"register\", 1, \"form-control\"], [\"id\", \"classe\", \"formControlName\", \"classe\", 1, \"form-control\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [\"id\", \"role\", \"formControlName\", \"role\", 1, \"form-control\"], [\"selected\", \"\", \"value\", \"Professeur\"], [\"value\", \"personnel de direction\"], [\"value\", \"g\\u00E9rant de magasin\"], [\"value\", \"comptable\"], [\"type\", \"text\", \"id\", \"salaire\", \"formControlName\", \"salaire\", \"placeholder\", \"ex: 2000\", 1, \"form-control\"]],\n    template: function AdmissionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function AdmissionComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.addOrUpdateUser();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"p\", 2);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"p\", 3);\n        i0.ɵɵtext(5, \"[ *Required]\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 4)(7, \"div\", 5)(8, \"div\", 6)(9, \"label\", 7);\n        i0.ɵɵtext(10, \"Nom Complete\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, AdmissionComponent_div_12_Template, 4, 0, \"div\", 9);\n        i0.ɵɵtemplate(13, AdmissionComponent_div_13_Template, 5, 1, \"div\", 9);\n        i0.ɵɵelementStart(14, \"div\", 6)(15, \"label\", 7);\n        i0.ɵɵtext(16, \"Date Naissance\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(18, AdmissionComponent_div_18_Template, 12, 0, \"div\", 9);\n        i0.ɵɵelementStart(19, \"div\", 6)(20, \"label\", 11);\n        i0.ɵɵtext(21, \"Genre\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"select\", 12)(23, \"option\", 13);\n        i0.ɵɵtext(24, \"Masculin\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"option\", 14);\n        i0.ɵɵtext(26, \"Feminin\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(27, \"div\", 6)(28, \"label\", 7);\n        i0.ɵɵtext(29, \"Adresse\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"input\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"div\", 6)(32, \"label\", 7);\n        i0.ɵɵtext(33, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(34, \"input\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(35, AdmissionComponent_div_35_Template, 4, 0, \"div\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(36, \"div\", 1)(37, \"p\", 2);\n        i0.ɵɵtext(38, \"Tuteur Legale Info\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"p\", 17);\n        i0.ɵɵtext(40, \"[Optional]\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(41, \"div\", 4)(42, \"div\", 18)(43, \"div\", 6)(44, \"label\", 7);\n        i0.ɵɵtext(45, \"Nom de Pere\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(46, \"input\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"div\", 6)(48, \"label\", 7);\n        i0.ɵɵtext(49, \"Carte Identiter\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(50, \"input\", 20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"div\", 6)(52, \"label\", 7);\n        i0.ɵɵtext(53, \"Profession\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(54, \"input\", 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(55, \"div\", 6)(56, \"label\", 7);\n        i0.ɵɵtext(57, \"Education\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(58, \"input\", 22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(59, \"div\", 6)(60, \"label\", 7);\n        i0.ɵɵtext(61, \"Mobile\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(62, \"input\", 23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(63, \"div\", 6)(64, \"label\", 7);\n        i0.ɵɵtext(65, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(66, \"input\", 24);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(67, \"button\", 25);\n        i0.ɵɵelement(68, \"i\", 26);\n        i0.ɵɵtext(69, \"Enregistrer\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" Information \", ctx.dataType, \"\");\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ctx.dataType === \"Student\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.dataType === \"Student\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.dataType !== \"Student\");\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"ngIf\", ctx.dataType !== \"Student\");\n      }\n    },\n    dependencies: [i5.NgForOf, i5.NgIf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\".bar-information[_ngcontent-%COMP%]{\\n   \\n   width: 100%;\\n   padding: 10px;\\n\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaXNzaW9uL2FkbWlzc2lvbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHLFdBQVc7R0FDWCxhQUFhOztBQUVoQiIsInNvdXJjZXNDb250ZW50IjpbIi5iYXItaW5mb3JtYXRpb257XHJcbiAgIFxyXG4gICB3aWR0aDogMTAwJTtcclxuICAgcGFkZGluZzogMTBweDtcclxuXHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵpropertyInterpolate","item_r5","_id","ɵɵadvance","ɵɵtextInterpolate","name","ɵɵtemplate","AdmissionComponent_div_13_option_4_Template","ɵɵproperty","ctx_r1","Classes","AdmissionComponent","constructor","userService","formBuilder","router","route","Cla","dataType","id","users","userForm","group","required","register","genre","dateN","adresse","role","father","profession","nationalId","education","mobile","email","password","salaire","classe","ngOnInit","params","subscribe","getClasse","console","log","editUser","getUserById","user","patchValue","addOrUpdateUser","valid","newUser","value","updateUser","updatedUser","reset","createUser","addedUser","_","ɵɵdirectiveInject","i1","UserService","i2","FormBuilder","i3","Router","ActivatedRoute","i4","ClasseroomService","_2","selectors","decls","vars","consts","template","AdmissionComponent_Template","rf","ctx","ɵɵlistener","AdmissionComponent_Template_form_ngSubmit_0_listener","AdmissionComponent_div_12_Template","AdmissionComponent_div_13_Template","AdmissionComponent_div_18_Template","AdmissionComponent_div_35_Template","ɵɵtextInterpolate1"],"sources":["C:\\Users\\Mehdi\\Desktop\\Angular\\admin-School\\src\\app\\admission\\admission.component.ts","C:\\Users\\Mehdi\\Desktop\\Angular\\admin-School\\src\\app\\admission\\admission.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { IUser } from 'src/models';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ClasseroomService } from '../classeroom.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n@Component({\n  selector: 'app-admission',\n  templateUrl: './admission.component.html',\n  styleUrls: ['./admission.component.css']\n})\nexport class AdmissionComponent implements OnInit {\n  dataType: String='';\n  id=''\n  users: IUser[]=[];\n  userForm: FormGroup= new FormGroup({});\n  Classes: any[] = [];\n  constructor(private userService: UserService,\n    private formBuilder: FormBuilder,\n    private router:Router,\n    private route: ActivatedRoute,\n    private Cla:ClasseroomService) {\n    this.userForm = this.formBuilder.group({\n    \nname: ['', Validators.required],\nregister: ['', ],\ngenre: ['', Validators.required],\ndateN: ['', Validators.required],\nadresse: ['', Validators.required],\nrole: ['Student',Validators.required],\nfather: ['', Validators.required],\nprofession: ['', Validators.required],\nnationalId: ['', Validators.required],\neducation: ['', Validators.required],\nmobile: ['', Validators.required],\nemail: ['', Validators.required],\npassword: ['', Validators.required],\nsalaire: ['', ],\nclasse: ['', ],\n\n      \n    });\n  }\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.dataType = params['type'];\n      this.id=params['id'] // Will be 'student' or 'employee'\n    });\n    this.Cla.getClasse()\n    .subscribe(classe =>{\n      this.Classes = classe\n      console.log(this.Classes);\n      \n    });\n  }\n\n  // Fetch and populate user data for editing\n  editUser() {\n    this.userService.getUserById(this.id).subscribe((user) => {\n      this.userForm.patchValue(user); // Use patchValue to populate the form\n    });\n  }\n  addOrUpdateUser() {\n    if (this.userForm.valid) {\n      const newUser = this.userForm.value;\n      \n      // Call the updateUser or createUser method from your user service\n      if (newUser.id) {\n        // If the user has an 'id', update the user\n        this.userService.updateUser(newUser.id, newUser).subscribe((updatedUser) => {\n          console.log('User updated:', updatedUser);\n          this.userForm.reset();\n        });\n      } else {\n        // If the user doesn't have an 'id', it's a new user, so create them\n        this.userService.createUser(newUser).subscribe((addedUser) => {\n          console.log('User added:', addedUser);\n          this.userForm.reset();\n        });\n      }\n    } else {\n      // Handle form validation errors\n    }\n  }\n  \n \n  \n}\n","<form [formGroup]=\"userForm\" (ngSubmit)=\" addOrUpdateUser()\">\n    \n<div class=\"d-flex justify-content-between text-light py-2 px-4 bg-primary align-items-center \">\n    <p class=''> Information {{dataType}}</p>\n    <p class='required'>[ *Required]</p>\n</div>\n\n<div class=\"container\">\n<div class='row gx-5'>\n    <div class=\"form-group col-4\">\n\t\t<label for=\"exampleFormControlInput1\">Nom Complete</label>\n\t\t<input type=\"text\" class=\"form-control\" id=\"name\"  formControlName=\"name\" placeholder=\"Nom Complete\">\n\t</div>\n    <div class=\"form-group col-4\" *ngIf=\"dataType === 'Student'\">\n\t\t<label for=\"exampleFormControlInput1\">Code Etudient</label>\n\t\t<input  type=\"text\" class=\"form-control\" id=\"register\"  formControlName=\"register\" placeholder=\"register\">\n\t</div>\n<div class=\"form-group col-4\" *ngIf=\"dataType === 'Student'\">\n    <label for=\"exampleFormControlSelect1\" >Choisire Classe</label>\n    <select  class=\"form-control\"id=\"classe\" formControlName=\"classe\">\n        <option *ngFor=\"let item of Classes\"  value=\"{{item._id}}\">{{item.name}}</option>\n    </select>\n</div>\n\n<div class=\"form-group col-4\">\n    <label for=\"exampleFormControlInput1\">Date Naissance</label>\n    <input type=\"date\" class=\"form-control\" id=\"dateN\"   formControlName=\"dateN\" >\n</div>\n<div class=\"form-group col-4\" *ngIf=\"dataType !== 'Student'\">\n    <label for=\"exampleFormControlSelect1\">Type Utilisateur</label>\n    <select class=\"form-control\"id=\"role\"  formControlName=\"role\">\n        <option selected value=\"Professeur\">Professeur</option>\n        <option value=\"personnel de direction\">personnel de direction</option>\n        <option value=\"gérant de magasin\">gérant de magasin</option>\n        <option value=\"comptable\">comptable</option>\n        \n    </select>\n</div>\n<div class=\"form-group col-4\">\n    <label for=\"exampleFormControlSelect1\">Genre</label>\n    <select  class=\"form-control\" id=\"genre\"  formControlName=\"genre\">\n        <option value=\"Masculin\">Masculin</option>\n        <option value=\"Feminin\">Feminin</option>\n    </select>\n</div>\n<div class=\"form-group col-4\">\n    <label for=\"exampleFormControlInput1\">Adresse</label>\n    <input  type=\"text\" class=\"form-control\" id=\"adresse\"  formControlName=\"adresse\" placeholder=\"\">\n</div>\n<div class=\"form-group col-4\">\n    <label for=\"exampleFormControlInput1\">Password</label>\n    <input type=\"text\" class=\"form-control\" id=\"password\"  formControlName=\"password\" placeholder=\"\">\n</div>\n<div class=\"form-group col-4\" *ngIf=\"dataType !== 'Student'\" >\n    <label for=\"exampleFormControlInput1\">Salaire</label>\n    <input   type=\"text\" class=\"form-control\" id=\"salaire\" formControlName=\"salaire\"  placeholder=\"ex: 2000\">\n</div>\n</div>\n</div>\n<div class='d-flex justify-content-between text-light py-2 px-4 bg-primary align-items-center '>\n    <p class=''>Tuteur Legale Info</p>\n    <p class='float-end'>[Optional]</p>\n</div>\n<div class=\"container\">\n<div class='row gap-x-5'>\n    <div class=\"form-group col-4\">\n        <label for=\"exampleFormControlInput1\">Nom de Pere</label>\n        <input   type=\"text\" class=\"form-control\" id=\"father\"  formControlName=\"father\"  placeholder=\"\">\n    </div>\n\n    <div class=\"form-group col-4\">\n        <label for=\"exampleFormControlInput1\">Carte Identiter</label>\n        <input  type=\"text\" class=\"form-control\"id=\"nationalId\"  formControlName=\"nationalId\" placeholder=\"\">\n    </div>\n\n    <div class=\"form-group col-4\">\n        <label for=\"exampleFormControlInput1\">Profession</label>\n        <input  type=\"text\" class=\"form-control\" id=\"profession\"  formControlName=\"profession\" placeholder=\"\">\n    </div>\n\n    <div class=\"form-group col-4\">\n        <label for=\"exampleFormControlInput1\">Education</label>\n        <input   type=\"text\" class=\"form-control\" id=\"education\"  formControlName=\"education\" placeholder=\"\">\n    </div>\n\n    <div class=\"form-group col-4\">\n        <label for=\"exampleFormControlInput1\">Mobile</label>\n        <input   type=\"text\" class=\"form-control\" id=\"mobile\"  formControlName=\"mobile\" placeholder=\"\">\n    </div>\n\n    <div class=\"form-group col-4\">\n        <label for=\"exampleFormControlInput1\">Email</label>\n        <input   type=\"text\" class=\"form-control\" id=\"email\"  formControlName=\"email\" placeholder=\"\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\"><i class=\"fas fa-user-plus mr-2\"></i>Enregistrer</button>\n</div>\n</div>\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}