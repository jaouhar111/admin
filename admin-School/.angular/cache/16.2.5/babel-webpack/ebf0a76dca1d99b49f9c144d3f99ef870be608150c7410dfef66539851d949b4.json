{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let LoginComponent = class LoginComponent {\n  constructor(router, user) {\n    this.router = router;\n    this.user = user;\n    this.isLoading = false;\n    this.email = '';\n    this.pass = '';\n  }\n  login() {\n    this.user.login(this.email, this.pass).subscribe(response => {\n      console.log(response);\n      if (response.role === 'Professeur') {\n        // If the role is 'employee', navigate to the employee profile\n        // Store the email in local storage\n        localStorage.setItem('userId', response.id);\n        //this.user.setUserId(response.id)\n        this.isLoading = true;\n        setTimeout(() => {\n          // After 5 seconds, set isLoading back to false\n          this.isLoading = false;\n          this.router.navigate(['/dashboard/profile', response.id, 'Professeur']);\n        }, 5000);\n      } else if (response.role === 'Student') {\n        localStorage.setItem('userId', response.id);\n        this.isLoading = true;\n        setTimeout(() => {\n          // After 5 seconds, set isLoading back to false\n          this.isLoading = false;\n          this.router.navigate(['/dashboard/profile', response.id, 'student']);\n        }, 3000);\n      } else if (response.role === 'personnel de direction') {\n        this.isLoading = true;\n        setTimeout(() => {\n          // After 5 seconds, set isLoading back to false\n          this.isLoading = false;\n          this.router.navigate(['/dashboard/home']);\n        }, 3000);\n        localStorage.setItem('userId', response.id);\n      } else {\n        // Handle other roles or scenarios\n        console.log('Unknown role:', response.id);\n      }\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);","map":{"version":3,"names":["Component","LoginComponent","constructor","router","user","isLoading","email","pass","login","subscribe","response","console","log","role","localStorage","setItem","id","setTimeout","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Mehdi\\Desktop\\Angular\\admin-School\\src\\app\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  isLoading=false\n  email='';\n  pass='';\n  constructor(private router: Router,private user:UserService) {}\n login() {\n    this.user.login(this.email, this.pass)\n      .subscribe((response) => {\n        console.log(response);\n        \n        if (response.role === 'Professeur') {\n          // If the role is 'employee', navigate to the employee profile\n          // Store the email in local storage\n          localStorage.setItem('userId', response.id);\n          //this.user.setUserId(response.id)\n          this.isLoading = true;\n          setTimeout(() => {\n    // After 5 seconds, set isLoading back to false\n         this.isLoading = false;\n         this.router.navigate(['/dashboard/profile', response.id, 'Professeur']);\n        }, 5000); \n          \n\n        } else if (response.role === 'Student') {\n          localStorage.setItem('userId', response.id);\n          \n          this.isLoading = true;\n          setTimeout(() => {\n    // After 5 seconds, set isLoading back to false\n         this.isLoading = false;\n         this.router.navigate(['/dashboard/profile', response.id, 'student']);\n        }, 3000);\n         \n          \n        } else if (response.role === 'personnel de direction') {\n          this.isLoading = true;\n          setTimeout(() => {\n    // After 5 seconds, set isLoading back to false\n         this.isLoading = false;\n          this.router.navigate(['/dashboard/home']);\n        }, 3000);\n         \n        localStorage.setItem('userId', response.id);\n        } else {\n          // Handle other roles or scenarios\n          console.log('Unknown role:', response.id);\n        }\n     });\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOlC,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAIzBC,YAAoBC,MAAc,EAASC,IAAgB;IAAvC,KAAAD,MAAM,GAANA,MAAM;IAAiB,KAAAC,IAAI,GAAJA,IAAI;IAH/C,KAAAC,SAAS,GAAC,KAAK;IACf,KAAAC,KAAK,GAAC,EAAE;IACR,KAAAC,IAAI,GAAC,EAAE;EACuD;EAC/DC,KAAKA,CAAA;IACF,IAAI,CAACJ,IAAI,CAACI,KAAK,CAAC,IAAI,CAACF,KAAK,EAAE,IAAI,CAACC,IAAI,CAAC,CACnCE,SAAS,CAAEC,QAAQ,IAAI;MACtBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MAErB,IAAIA,QAAQ,CAACG,IAAI,KAAK,YAAY,EAAE;QAClC;QACA;QACAC,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEL,QAAQ,CAACM,EAAE,CAAC;QAC3C;QACA,IAAI,CAACX,SAAS,GAAG,IAAI;QACrBY,UAAU,CAAC,MAAK;UACtB;UACK,IAAI,CAACZ,SAAS,GAAG,KAAK;UACtB,IAAI,CAACF,MAAM,CAACe,QAAQ,CAAC,CAAC,oBAAoB,EAAER,QAAQ,CAACM,EAAE,EAAE,YAAY,CAAC,CAAC;QACxE,CAAC,EAAE,IAAI,CAAC;OAGP,MAAM,IAAIN,QAAQ,CAACG,IAAI,KAAK,SAAS,EAAE;QACtCC,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEL,QAAQ,CAACM,EAAE,CAAC;QAE3C,IAAI,CAACX,SAAS,GAAG,IAAI;QACrBY,UAAU,CAAC,MAAK;UACtB;UACK,IAAI,CAACZ,SAAS,GAAG,KAAK;UACtB,IAAI,CAACF,MAAM,CAACe,QAAQ,CAAC,CAAC,oBAAoB,EAAER,QAAQ,CAACM,EAAE,EAAE,SAAS,CAAC,CAAC;QACrE,CAAC,EAAE,IAAI,CAAC;OAGP,MAAM,IAAIN,QAAQ,CAACG,IAAI,KAAK,wBAAwB,EAAE;QACrD,IAAI,CAACR,SAAS,GAAG,IAAI;QACrBY,UAAU,CAAC,MAAK;UACtB;UACK,IAAI,CAACZ,SAAS,GAAG,KAAK;UACrB,IAAI,CAACF,MAAM,CAACe,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC;QAC3C,CAAC,EAAE,IAAI,CAAC;QAERJ,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEL,QAAQ,CAACM,EAAE,CAAC;OAC1C,MAAM;QACL;QACAL,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,QAAQ,CAACM,EAAE,CAAC;;IAE9C,CAAC,CAAC;EACL;CACD;AAjDYf,cAAc,GAAAkB,UAAA,EAL1BnB,SAAS,CAAC;EACToB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWrB,cAAc,CAiD1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}