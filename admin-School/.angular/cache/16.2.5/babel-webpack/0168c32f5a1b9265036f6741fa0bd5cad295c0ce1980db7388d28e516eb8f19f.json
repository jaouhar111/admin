{"ast":null,"code":"import { BehaviorSubject, catchError, tap, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MatiereService {\n  constructor(http) {\n    this.http = http;\n    this.matieres = new BehaviorSubject([]);\n    this.matieres$ = this.matieres.asObservable();\n    this.url = \"http://localhost:9000/api/matiere\";\n  }\n  ajMatiere(name, note) {\n    const studentData = {\n      name,\n      note\n    };\n    // Return the full HTTP response with the created student data\n    return this.http.post(this.url, studentData, {\n      observe: 'response'\n    }).pipe(tap(addedMatier => {\n      const currentClasses = this.matieres.getValue();\n      currentClasses.push(addedMatier);\n      this.matieres.next(currentClasses);\n      //console.log(addedClass);\n      //console.log(currentClasses);\n      //console.log(this.classes);\n    }), catchError(this.handleError));\n  }\n  handleError(error) {\n    if (error.status === 0) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(`Backend returned code ${error.status}, body was: `, error.error);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(() => new Error('Something bad happened; please try again later.'));\n  }\n  getMatiere(id) {\n    return this.http.get('http://localhost:9000/api/matiere/' + id).pipe(\n    //tap(matiere=>console.log(\"matiere\",matiere)),\n    catchError(this.handleError));\n  }\n  deleteMatiereById(id) {\n    const url = `http://localhost:9000/api/matiere/${id}`; // Replace with your API endpoint\n    return this.http.delete(url);\n  }\n  static #_ = this.ɵfac = function MatiereService_Factory(t) {\n    return new (t || MatiereService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MatiereService,\n    factory: MatiereService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","catchError","tap","throwError","MatiereService","constructor","http","matieres","matieres$","asObservable","url","ajMatiere","name","note","studentData","post","observe","pipe","addedMatier","currentClasses","getValue","push","next","handleError","error","status","console","Error","getMatiere","id","get","deleteMatiereById","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Mehdi\\Desktop\\Angular\\admin-School\\src\\app\\matiere.service.ts"],"sourcesContent":["import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, catchError, tap, throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatiereService {\n  matieres: BehaviorSubject<any[]> = new BehaviorSubject<any[]>([]);\n  matieres$: Observable<any[]> = this.matieres.asObservable();\n  private readonly url=\"http://localhost:9000/api/matiere\";\n  constructor(private http:HttpClient) { }\n  ajMatiere(\n    name: String,\n    note: String,\n \n  ): Observable<any> {\n    const studentData = {\n      name,\n      note,\n    };\n\n    // Return the full HTTP response with the created student data\n    return this.http.post(this.url, studentData, { observe: 'response' }).pipe(\n      \n      tap((addedMatier) => {\n        const currentClasses = this.matieres.getValue();\n        currentClasses.push(addedMatier);\n        this.matieres.next(currentClasses);\n        //console.log(addedClass);\n        //console.log(currentClasses);\n        //console.log(this.classes);\n      }),\n      catchError(this.handleError)\n    );\n  }\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, body was: `, error.error);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(() => new Error('Something bad happened; please try again later.'));\n  }\n  public getMatiere(id:String):Observable<any>\n  {\n    return this.http.get('http://localhost:9000/api/matiere/'+id).pipe(\n        //tap(matiere=>console.log(\"matiere\",matiere)),\n        catchError(this.handleError)\n    );\n  }\n\n  deleteMatiereById(id: string): Observable<any> {\n    const url = `http://localhost:9000/api/matiere/${id}`; // Replace with your API endpoint\n    return this.http.delete(url);\n  }\n}\n"],"mappings":"AAEA,SAASA,eAAe,EAAcC,UAAU,EAAEC,GAAG,EAAEC,UAAU,QAAQ,MAAM;;;AAK/E,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAHxB,KAAAC,QAAQ,GAA2B,IAAIP,eAAe,CAAQ,EAAE,CAAC;IACjE,KAAAQ,SAAS,GAAsB,IAAI,CAACD,QAAQ,CAACE,YAAY,EAAE;IAC1C,KAAAC,GAAG,GAAC,mCAAmC;EACjB;EACvCC,SAASA,CACPC,IAAY,EACZC,IAAY;IAGZ,MAAMC,WAAW,GAAG;MAClBF,IAAI;MACJC;KACD;IAED;IACA,OAAO,IAAI,CAACP,IAAI,CAACS,IAAI,CAAC,IAAI,CAACL,GAAG,EAAEI,WAAW,EAAE;MAAEE,OAAO,EAAE;IAAU,CAAE,CAAC,CAACC,IAAI,CAExEf,GAAG,CAAEgB,WAAW,IAAI;MAClB,MAAMC,cAAc,GAAG,IAAI,CAACZ,QAAQ,CAACa,QAAQ,EAAE;MAC/CD,cAAc,CAACE,IAAI,CAACH,WAAW,CAAC;MAChC,IAAI,CAACX,QAAQ,CAACe,IAAI,CAACH,cAAc,CAAC;MAClC;MACA;MACA;IACF,CAAC,CAAC,EACFlB,UAAU,CAAC,IAAI,CAACsB,WAAW,CAAC,CAC7B;EACH;EACQA,WAAWA,CAACC,KAAwB;IAC1C,IAAIA,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;MACtB;MACAC,OAAO,CAACF,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAACA,KAAK,CAAC;KACjD,MAAM;MACL;MACA;MACAE,OAAO,CAACF,KAAK,CACX,yBAAyBA,KAAK,CAACC,MAAM,cAAc,EAAED,KAAK,CAACA,KAAK,CAAC;;IAErE;IACA,OAAOrB,UAAU,CAAC,MAAM,IAAIwB,KAAK,CAAC,iDAAiD,CAAC,CAAC;EACvF;EACOC,UAAUA,CAACC,EAAS;IAEzB,OAAO,IAAI,CAACvB,IAAI,CAACwB,GAAG,CAAC,oCAAoC,GAACD,EAAE,CAAC,CAACZ,IAAI;IAC9D;IACAhB,UAAU,CAAC,IAAI,CAACsB,WAAW,CAAC,CAC/B;EACH;EAEAQ,iBAAiBA,CAACF,EAAU;IAC1B,MAAMnB,GAAG,GAAG,qCAAqCmB,EAAE,EAAE,CAAC,CAAC;IACvD,OAAO,IAAI,CAACvB,IAAI,CAAC0B,MAAM,CAACtB,GAAG,CAAC;EAC9B;EAAC,QAAAuB,CAAA,G;qBArDU7B,cAAc,EAAA8B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdlC,cAAc;IAAAmC,OAAA,EAAdnC,cAAc,CAAAoC,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}