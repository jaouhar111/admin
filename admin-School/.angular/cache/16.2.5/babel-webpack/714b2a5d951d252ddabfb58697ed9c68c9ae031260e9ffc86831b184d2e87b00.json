{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let WeatherComponent = class WeatherComponent {\n  constructor(weatherService) {\n    this.weatherService = weatherService;\n    this.condition = '';\n    this.city = 'Fez';\n  }\n  ngOnInit() {\n    this.weatherService.getWeather(this.city).subscribe(data => {\n      this.weatherData = data.current;\n      this.weatherlocation = data.location;\n      this.condition = this.weatherData.condition.text;\n    });\n  }\n  getImagePath() {\n    if (this.condition === 'Clear') {\n      return 'https://mdbgo.io/ascensus/mdb-advanced/img/clear.gif';\n    } else if (this.condition === 'Partly cloudy') {\n      return 'https://mdbgo.io/ascensus/mdb-advanced/img/clouds.gif';\n    } else if (this.condition === 'Rain') {\n      return 'https://mdbgo.io/ascensus/mdb-advanced/img/rain.gif';\n    } else if (this.condition === 'Storm') {\n      return 'https://mdbgo.io/ascensus/mdb-advanced/img/thunderstorm.gif';\n    } else if (this.condition === 'Snow') {\n      return 'https://mdbgo.io/ascensus/mdb-advanced/img/snow.gif';\n    } else {\n      return 'https://mdbgo.io/ascensus/mdb-advanced/img/clear.gif'; // Default image if condition not recognized\n    }\n  }\n};\n\nWeatherComponent = __decorate([Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css']\n})], WeatherComponent);","map":{"version":3,"names":["Component","WeatherComponent","constructor","weatherService","condition","city","ngOnInit","getWeather","subscribe","data","weatherData","current","weatherlocation","location","text","getImagePath","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Mehdi\\Desktop\\Angular\\admin-School\\src\\app\\weather\\weather.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css']\n})\nexport class WeatherComponent {\n  condition:string=''\n  weatherData: any;\n  weatherlocation: any;\n  city = 'Fez';\nconstructor(private weatherService:WeatherService){}\n  ngOnInit(): void {\n    this.weatherService.getWeather(this.city)\n      .subscribe(data => {\n        this.weatherData = data.current;\n        this.weatherlocation=data.location\n        this.condition= this.weatherData.condition.text\n        \n        \n      });\n  }\n  getImagePath() {\n    if (this.condition === 'Clear') {\n      return 'https://mdbgo.io/ascensus/mdb-advanced/img/clear.gif';\n    } else if (this.condition === 'Partly cloudy') {\n      return 'https://mdbgo.io/ascensus/mdb-advanced/img/clouds.gif';\n    } else if (this.condition === 'Rain') {\n      return 'https://mdbgo.io/ascensus/mdb-advanced/img/rain.gif';\n    } else if (this.condition === 'Storm') {\n      return 'https://mdbgo.io/ascensus/mdb-advanced/img/thunderstorm.gif';\n    } else if (this.condition === 'Snow') {\n      return 'https://mdbgo.io/ascensus/mdb-advanced/img/snow.gif';\n    } else {\n      return 'https://mdbgo.io/ascensus/mdb-advanced/img/clear.gif'; // Default image if condition not recognized\n    }\n      \n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOlC,WAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAK7BC,YAAoBC,cAA6B;IAA7B,KAAAA,cAAc,GAAdA,cAAc;IAJhC,KAAAC,SAAS,GAAQ,EAAE;IAGnB,KAAAC,IAAI,GAAG,KAAK;EACqC;EACjDC,QAAQA,CAAA;IACN,IAAI,CAACH,cAAc,CAACI,UAAU,CAAC,IAAI,CAACF,IAAI,CAAC,CACtCG,SAAS,CAACC,IAAI,IAAG;MAChB,IAAI,CAACC,WAAW,GAAGD,IAAI,CAACE,OAAO;MAC/B,IAAI,CAACC,eAAe,GAACH,IAAI,CAACI,QAAQ;MAClC,IAAI,CAACT,SAAS,GAAE,IAAI,CAACM,WAAW,CAACN,SAAS,CAACU,IAAI;IAGjD,CAAC,CAAC;EACN;EACAC,YAAYA,CAAA;IACV,IAAI,IAAI,CAACX,SAAS,KAAK,OAAO,EAAE;MAC9B,OAAO,sDAAsD;KAC9D,MAAM,IAAI,IAAI,CAACA,SAAS,KAAK,eAAe,EAAE;MAC7C,OAAO,uDAAuD;KAC/D,MAAM,IAAI,IAAI,CAACA,SAAS,KAAK,MAAM,EAAE;MACpC,OAAO,qDAAqD;KAC7D,MAAM,IAAI,IAAI,CAACA,SAAS,KAAK,OAAO,EAAE;MACrC,OAAO,6DAA6D;KACrE,MAAM,IAAI,IAAI,CAACA,SAAS,KAAK,MAAM,EAAE;MACpC,OAAO,qDAAqD;KAC7D,MAAM;MACL,OAAO,sDAAsD,CAAC,CAAC;;EAGnE;CACD;;AAhCYH,gBAAgB,GAAAe,UAAA,EAL5BhB,SAAS,CAAC;EACTiB,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EACWlB,gBAAgB,CAgC5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}