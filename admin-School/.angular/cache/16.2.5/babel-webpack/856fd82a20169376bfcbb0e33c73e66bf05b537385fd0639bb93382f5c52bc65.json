{"ast":null,"code":"import { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:9000/api'; // Replace with your server API URL\n    this.isAuthenticated = false;\n  }\n  // Create a new user\n  createUser(user) {\n    return this.http.post(`${this.apiUrl}/users`, user).pipe(tap(student => console.log(\"student\", student)));\n  }\n  getAll() {\n    return this.http.get(this.apiUrl + '/users').pipe();\n  }\n  getUserById(userId) {\n    return this.http.get(`${this.apiUrl}/users/${userId}`);\n  }\n  updateUser(userId, updatedUserData) {\n    // Make an HTTP PUT or PATCH request to update the user by ID\n    return this.http.put(`${this.apiUrl}/users/${userId}`, updatedUserData);\n  }\n  deleteUser(userId) {\n    return this.http.delete(`${this.apiUrl}/users/${userId}`);\n  }\n  login(email, password) {\n    const loginData = {\n      email,\n      password\n    };\n    this.isAuthenticated = true;\n    return this.http.post('http://localhost:9000/api/users/login', loginData);\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["tap","UserService","constructor","http","apiUrl","isAuthenticated","createUser","user","post","pipe","student","console","log","getAll","get","getUserById","userId","updateUser","updatedUserData","put","deleteUser","delete","login","email","password","loginData","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Mehdi\\Desktop\\Angular\\admin-School\\src\\app\\user.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, tap } from 'rxjs';\nimport { IUser } from 'src/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private apiUrl = 'http://localhost:9000/api'; // Replace with your server API URL\n  isAuthenticated=false\n  constructor(private http: HttpClient) {}\n\n  // Create a new user\n  createUser(user: IUser): Observable<IUser> {\n    return this.http.post<IUser>(`${this.apiUrl}/users`, user).pipe(\n      tap(student=>console.log(\"student\",student)),\n    );\n  }\n  public getAll():Observable<any>\n  {\n    \n    return this.http.get(this.apiUrl+'/users').pipe(\n      \n    )\n  };\n\n  public getUserById(userId:any):Observable<any>\n  {\n    return this.http.get(`${this.apiUrl}/users/${userId}`)\n  }\n\n  updateUser(userId: string, updatedUserData: any): Observable<any> {\n    // Make an HTTP PUT or PATCH request to update the user by ID\n    return this.http.put(`${this.apiUrl}/users/${userId}`, updatedUserData)\n  }\n  deleteUser(userId: String): Observable<any> {\n    \n    return this.http.delete(`${this.apiUrl}/users/${userId}`);\n  }\n\n  login(email: string, password: string): Observable<any> {\n    const loginData = { email, password };\n    \n    this.isAuthenticated=true;\n    \n    return this.http.post('http://localhost:9000/api/users/login', loginData);\n  }\n}\n"],"mappings":"AAEA,SAAqBA,GAAG,QAAQ,MAAM;;;AAMtC,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,2BAA2B,CAAC,CAAC;IAC9C,KAAAC,eAAe,GAAC,KAAK;EACkB;EAEvC;EACAC,UAAUA,CAACC,IAAW;IACpB,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAQ,GAAG,IAAI,CAACJ,MAAM,QAAQ,EAAEG,IAAI,CAAC,CAACE,IAAI,CAC7DT,GAAG,CAACU,OAAO,IAAEC,OAAO,CAACC,GAAG,CAAC,SAAS,EAACF,OAAO,CAAC,CAAC,CAC7C;EACH;EACOG,MAAMA,CAAA;IAGX,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAC,IAAI,CAACV,MAAM,GAAC,QAAQ,CAAC,CAACK,IAAI,EAE9C;EACH;EAEOM,WAAWA,CAACC,MAAU;IAE3B,OAAO,IAAI,CAACb,IAAI,CAACW,GAAG,CAAC,GAAG,IAAI,CAACV,MAAM,UAAUY,MAAM,EAAE,CAAC;EACxD;EAEAC,UAAUA,CAACD,MAAc,EAAEE,eAAoB;IAC7C;IACA,OAAO,IAAI,CAACf,IAAI,CAACgB,GAAG,CAAC,GAAG,IAAI,CAACf,MAAM,UAAUY,MAAM,EAAE,EAAEE,eAAe,CAAC;EACzE;EACAE,UAAUA,CAACJ,MAAc;IAEvB,OAAO,IAAI,CAACb,IAAI,CAACkB,MAAM,CAAC,GAAG,IAAI,CAACjB,MAAM,UAAUY,MAAM,EAAE,CAAC;EAC3D;EAEAM,KAAKA,CAACC,KAAa,EAAEC,QAAgB;IACnC,MAAMC,SAAS,GAAG;MAAEF,KAAK;MAAEC;IAAQ,CAAE;IAErC,IAAI,CAACnB,eAAe,GAAC,IAAI;IAEzB,OAAO,IAAI,CAACF,IAAI,CAACK,IAAI,CAAC,uCAAuC,EAAEiB,SAAS,CAAC;EAC3E;EAAC,QAAAC,CAAA,G;qBAxCUzB,WAAW,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAX9B,WAAW;IAAA+B,OAAA,EAAX/B,WAAW,CAAAgC,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}