{"ast":null,"code":"import { catchError, tap, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ClasseroomService {\n  constructor(http) {\n    this.http = http;\n    this.url = \"http://localhost:9000/api/classes\";\n  }\n  getClasse() {\n    return this.http.get(this.url).pipe(tap(classe => {}), catchError(this.handleError));\n  }\n  handleError(error) {\n    if (error.status === 0) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(`Backend returned code ${error.status}, body was: `, error.error);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(() => new Error('Something bad happened; please try again later.'));\n  }\n  static #_ = this.ɵfac = function ClasseroomService_Factory(t) {\n    return new (t || ClasseroomService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ClasseroomService,\n    factory: ClasseroomService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["catchError","tap","throwError","ClasseroomService","constructor","http","url","getClasse","get","pipe","classe","handleError","error","status","console","Error","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Mehdi\\Desktop\\Angular\\admin-School\\src\\app\\classeroom.service.ts"],"sourcesContent":["import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, catchError, tap, throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClasseroomService {\n  private readonly url=\"http://localhost:9000/api/classes\";\n  constructor(private http:HttpClient) { \n    \n  }\n\n  public getClasse():Observable<any>\n  {\n    return this.http.get(this.url).pipe(\n      tap((classe:any) => {\n        \n        \n      }),\n      catchError(this.handleError)\n    );\n  }\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, body was: `, error.error);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(() => new Error('Something bad happened; please try again later.'));\n  }\n}\n"],"mappings":"AAEA,SAAqBA,UAAU,EAAEC,GAAG,EAAEC,UAAU,QAAQ,MAAM;;;AAK9D,OAAM,MAAOC,iBAAiB;EAE5BC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IADP,KAAAC,GAAG,GAAC,mCAAmC;EAGxD;EAEOC,SAASA,CAAA;IAEd,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,IAAI,CAACF,GAAG,CAAC,CAACG,IAAI,CACjCR,GAAG,CAAES,MAAU,IAAI,CAGnB,CAAC,CAAC,EACFV,UAAU,CAAC,IAAI,CAACW,WAAW,CAAC,CAC7B;EACH;EACQA,WAAWA,CAACC,KAAwB;IAC1C,IAAIA,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;MACtB;MACAC,OAAO,CAACF,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAACA,KAAK,CAAC;KACjD,MAAM;MACL;MACA;MACAE,OAAO,CAACF,KAAK,CACX,yBAAyBA,KAAK,CAACC,MAAM,cAAc,EAAED,KAAK,CAACA,KAAK,CAAC;;IAErE;IACA,OAAOV,UAAU,CAAC,MAAM,IAAIa,KAAK,CAAC,iDAAiD,CAAC,CAAC;EACvF;EAAC,QAAAC,CAAA,G;qBA5BUb,iBAAiB,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAjBlB,iBAAiB;IAAAmB,OAAA,EAAjBnB,iBAAiB,CAAAoB,IAAA;IAAAC,UAAA,EAFhB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}