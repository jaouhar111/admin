{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ClasseroomComponent = class ClasseroomComponent {\n  constructor(employee, Cla, formBuilder) {\n    this.employee = employee;\n    this.Cla = Cla;\n    this.formBuilder = formBuilder;\n    this.receivedId = '';\n    this.Classes = [];\n    this.Employees = [];\n  }\n  ngOnInit() {\n    this.employee.getAll().subscribe(data => {\n      // Filter users by role 'Professeur'\n      this.Employees = data.filter(user => user.role === 'Professeur');\n      console.log(this.Employees);\n    });\n    this.Cla.classes$.subscribe(classes => {\n      this.Classes = classes;\n    });\n    console.log(this.Classes);\n    this.fetchClasses();\n  }\n  fetchClasses() {\n    this.Cla.getClasse().subscribe(classes => {\n      // This will update the Classes array when classes are fetched\n      this.Classes = classes;\n      console.log(this.Classes);\n    }, error => {\n      // Handle errors here\n      console.error('Error fetching classes:', error);\n    });\n  }\n  onItemClick(itemId) {\n    this.receivedId = itemId;\n  }\n  deleteClasse(userId) {\n    this.Cla.deleteClasse(userId).subscribe(() => {\n      // Handle the success of the deletion here\n      console.log(`Class with ID ${userId} deleted successfully.`);\n      this.fetchClasses();\n    }, error => {\n      // Handle any errors that may occur during deletion\n      console.error(`Error deleting class with ID ${userId}:`, error);\n    });\n  }\n  ajClasse() {\n    this.Cla.ajClasse(this.name, this.prof).subscribe({\n      next: () => console.log(\"save classe\" + this.name + this.prof)\n    });\n  }\n};\nClasseroomComponent = __decorate([Component({\n  selector: 'app-classeroom',\n  templateUrl: './classeroom.component.html',\n  styleUrls: ['./classeroom.component.css']\n})], ClasseroomComponent);","map":{"version":3,"names":["Component","ClasseroomComponent","constructor","employee","Cla","formBuilder","receivedId","Classes","Employees","ngOnInit","getAll","subscribe","data","filter","user","role","console","log","classes$","classes","fetchClasses","getClasse","error","onItemClick","itemId","deleteClasse","userId","ajClasse","name","prof","next","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Mehdi\\Desktop\\Angular\\admin-School\\src\\app\\classeroom\\classeroom.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { IUser } from 'src/models';\nimport { ClasseroomService } from '../classeroom.service';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-classeroom',\n  templateUrl: './classeroom.component.html',\n  styleUrls: ['./classeroom.component.css']\n})\nexport class ClasseroomComponent {\n  receivedId=''\n  Classes: any[] = [];\n  Employees:IUser [] = [];\n  constructor(private employee:UserService,private Cla:ClasseroomService,private formBuilder: FormBuilder,){}\n  ngOnInit(): void {\n    this.employee.getAll()\n    .subscribe((data: IUser[]) => {\n      // Filter users by role 'Professeur'\n      this.Employees = data.filter(user => user.role === 'Professeur');\n      console.log(this.Employees);\n      \n    });\n    this.Cla.classes$.subscribe((classes) => {\n      this.Classes = classes;\n    });\n    console.log(this.Classes);\n    \n    this.fetchClasses();\n  }\n\n  fetchClasses() {\n    this.Cla.getClasse().subscribe(\n      (classes) => {\n        // This will update the Classes array when classes are fetched\n        this.Classes = classes;\n        console.log(this.Classes);\n      },\n      (error) => {\n        // Handle errors here\n        console.error('Error fetching classes:', error);\n      }\n    );\n  }\n\n  onItemClick(itemId: string) {\n    this.receivedId = itemId;\n  }\n\n  deleteClasse(userId: string){\n    this.Cla.deleteClasse(userId).subscribe(\n      () => {\n        // Handle the success of the deletion here\n        console.log(`Class with ID ${userId} deleted successfully.`);\n        this.fetchClasses();\n      },\n      (error) => {\n        // Handle any errors that may occur during deletion\n        console.error(`Error deleting class with ID ${userId}:`, error);\n      }\n    );\n  }\n\n  ajClasse(){\n    this.Cla.ajClasse(this.name,this.prof).subscribe({\n      next:()=>console.log(\"save classe\"+this.name+this.prof), \n   });\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAUlC,WAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAI9BC,YAAoBC,QAAoB,EAASC,GAAqB,EAASC,WAAwB;IAAnF,KAAAF,QAAQ,GAARA,QAAQ;IAAqB,KAAAC,GAAG,GAAHA,GAAG;IAA2B,KAAAC,WAAW,GAAXA,WAAW;IAH1F,KAAAC,UAAU,GAAC,EAAE;IACb,KAAAC,OAAO,GAAU,EAAE;IACnB,KAAAC,SAAS,GAAY,EAAE;EACmF;EAC1GC,QAAQA,CAAA;IACN,IAAI,CAACN,QAAQ,CAACO,MAAM,EAAE,CACrBC,SAAS,CAAEC,IAAa,IAAI;MAC3B;MACA,IAAI,CAACJ,SAAS,GAAGI,IAAI,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,YAAY,CAAC;MAChEC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,SAAS,CAAC;IAE7B,CAAC,CAAC;IACF,IAAI,CAACJ,GAAG,CAACc,QAAQ,CAACP,SAAS,CAAEQ,OAAO,IAAI;MACtC,IAAI,CAACZ,OAAO,GAAGY,OAAO;IACxB,CAAC,CAAC;IACFH,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,OAAO,CAAC;IAEzB,IAAI,CAACa,YAAY,EAAE;EACrB;EAEAA,YAAYA,CAAA;IACV,IAAI,CAAChB,GAAG,CAACiB,SAAS,EAAE,CAACV,SAAS,CAC3BQ,OAAO,IAAI;MACV;MACA,IAAI,CAACZ,OAAO,GAAGY,OAAO;MACtBH,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,OAAO,CAAC;IAC3B,CAAC,EACAe,KAAK,IAAI;MACR;MACAN,OAAO,CAACM,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,CACF;EACH;EAEAC,WAAWA,CAACC,MAAc;IACxB,IAAI,CAAClB,UAAU,GAAGkB,MAAM;EAC1B;EAEAC,YAAYA,CAACC,MAAc;IACzB,IAAI,CAACtB,GAAG,CAACqB,YAAY,CAACC,MAAM,CAAC,CAACf,SAAS,CACrC,MAAK;MACH;MACAK,OAAO,CAACC,GAAG,CAAC,iBAAiBS,MAAM,wBAAwB,CAAC;MAC5D,IAAI,CAACN,YAAY,EAAE;IACrB,CAAC,EACAE,KAAK,IAAI;MACR;MACAN,OAAO,CAACM,KAAK,CAAC,gCAAgCI,MAAM,GAAG,EAAEJ,KAAK,CAAC;IACjE,CAAC,CACF;EACH;EAEAK,QAAQA,CAAA;IACN,IAAI,CAACvB,GAAG,CAACuB,QAAQ,CAAC,IAAI,CAACC,IAAI,EAAC,IAAI,CAACC,IAAI,CAAC,CAAClB,SAAS,CAAC;MAC/CmB,IAAI,EAACA,CAAA,KAAId,OAAO,CAACC,GAAG,CAAC,aAAa,GAAC,IAAI,CAACW,IAAI,GAAC,IAAI,CAACC,IAAI;KACxD,CAAC;EACL;CAAC;AAzDY5B,mBAAmB,GAAA8B,UAAA,EAL/B/B,SAAS,CAAC;EACTgC,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EACWjC,mBAAmB,CAyD/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}