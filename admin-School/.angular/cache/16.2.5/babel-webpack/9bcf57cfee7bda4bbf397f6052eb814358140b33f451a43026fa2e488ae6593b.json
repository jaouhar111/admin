{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let LoginComponent = class LoginComponent {\n  constructor(router, user) {\n    this.router = router;\n    this.user = user;\n    this.message = \"\";\n    this.isLoading = false;\n    this.email = '';\n    this.pass = '';\n  }\n  login() {\n    this.user.login(this.email, this.pass).subscribe(response => {\n      console.log(response);\n      if (response.role === 'Professeur') {\n        // If the role is 'employee', navigate to the employee profile\n        // Store the email in local storage\n        localStorage.setItem('userId', response.id);\n        //this.user.setUserId(response.id)\n        this.isLoading = true;\n        this.router.navigate(['/dashboard/profile', response.id, 'Professeur']);\n      } else if (response.role === 'Student') {\n        localStorage.setItem('userId', response.id);\n        setTimeout(() => {\n          // After 5 seconds, set isLoading back to false\n          this.router.navigate(['/dashboard/profile', response.id, 'student']);\n        }, 3000);\n      } else if (response.role === 'personnel de direction') {\n        this.isLoading = true;\n        localStorage.setItem('userId', response.id);\n        setTimeout(() => {\n          this.message = 'welcome! Mr' + response.name;\n          this.router.navigate(['/dashboard/home']);\n          ;\n        }, 2000);\n      } else {\n        // Handle other roles or scenarios\n        console.log('Unknown role:', response.id);\n      }\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);","map":{"version":3,"names":["Component","LoginComponent","constructor","router","user","message","isLoading","email","pass","login","subscribe","response","console","log","role","localStorage","setItem","id","navigate","setTimeout","name","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Mehdi\\Desktop\\Angular\\admin-School\\src\\app\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  message=\"\"\n  isLoading=false\n  email='';\n  pass='';\n  constructor(private router: Router,private user:UserService) {}\n login() {\n    this.user.login(this.email, this.pass)\n      .subscribe((response) => {\n        console.log(response);\n        \n        if (response.role === 'Professeur') {\n          // If the role is 'employee', navigate to the employee profile\n          // Store the email in local storage\n          localStorage.setItem('userId', response.id);\n          //this.user.setUserId(response.id)\n          this.isLoading = true;\n          \n          this.router.navigate(['/dashboard/profile', response.id, 'Professeur']);\n           \n          \n\n        } else if (response.role === 'Student') {\n          localStorage.setItem('userId', response.id);\n         \n          \n          setTimeout(() => {\n    // After 5 seconds, set isLoading back to false\n         \n         this.router.navigate(['/dashboard/profile', response.id, 'student']);\n        }, 3000);\n         \n          \n        } else if (response.role === 'personnel de direction') {\n          this.isLoading = true;\n        localStorage.setItem('userId', response.id);\n        setTimeout(() => {\n          this.message='welcome! Mr'+response.name\n          this.router.navigate(['/dashboard/home']);;\n              }, 2000);\n        \n        } else {\n          // Handle other roles or scenarios\n          console.log('Unknown role:', response.id);\n        }\n     });\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAKzBC,YAAoBC,MAAc,EAASC,IAAgB;IAAvC,KAAAD,MAAM,GAANA,MAAM;IAAiB,KAAAC,IAAI,GAAJA,IAAI;IAJ/C,KAAAC,OAAO,GAAC,EAAE;IACV,KAAAC,SAAS,GAAC,KAAK;IACf,KAAAC,KAAK,GAAC,EAAE;IACR,KAAAC,IAAI,GAAC,EAAE;EACuD;EAC/DC,KAAKA,CAAA;IACF,IAAI,CAACL,IAAI,CAACK,KAAK,CAAC,IAAI,CAACF,KAAK,EAAE,IAAI,CAACC,IAAI,CAAC,CACnCE,SAAS,CAAEC,QAAQ,IAAI;MACtBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MAErB,IAAIA,QAAQ,CAACG,IAAI,KAAK,YAAY,EAAE;QAClC;QACA;QACAC,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEL,QAAQ,CAACM,EAAE,CAAC;QAC3C;QACA,IAAI,CAACX,SAAS,GAAG,IAAI;QAErB,IAAI,CAACH,MAAM,CAACe,QAAQ,CAAC,CAAC,oBAAoB,EAAEP,QAAQ,CAACM,EAAE,EAAE,YAAY,CAAC,CAAC;OAIxE,MAAM,IAAIN,QAAQ,CAACG,IAAI,KAAK,SAAS,EAAE;QACtCC,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEL,QAAQ,CAACM,EAAE,CAAC;QAG3CE,UAAU,CAAC,MAAK;UACtB;UAEK,IAAI,CAAChB,MAAM,CAACe,QAAQ,CAAC,CAAC,oBAAoB,EAAEP,QAAQ,CAACM,EAAE,EAAE,SAAS,CAAC,CAAC;QACrE,CAAC,EAAE,IAAI,CAAC;OAGP,MAAM,IAAIN,QAAQ,CAACG,IAAI,KAAK,wBAAwB,EAAE;QACrD,IAAI,CAACR,SAAS,GAAG,IAAI;QACvBS,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEL,QAAQ,CAACM,EAAE,CAAC;QAC3CE,UAAU,CAAC,MAAK;UACd,IAAI,CAACd,OAAO,GAAC,aAAa,GAACM,QAAQ,CAACS,IAAI;UACxC,IAAI,CAACjB,MAAM,CAACe,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC;UAAC;QACtC,CAAC,EAAE,IAAI,CAAC;OAEb,MAAM;QACL;QACAN,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,QAAQ,CAACM,EAAE,CAAC;;IAE9C,CAAC,CAAC;EACL;CACD;AA/CYhB,cAAc,GAAAoB,UAAA,EAL1BrB,SAAS,CAAC;EACTsB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWvB,cAAc,CA+C1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}