{"ast":null,"code":"import { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AttendanceService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:9000/api/attendance';\n  }\n  // Create a new attendance record\n  createAttendance(attendanceData) {\n    return this.http.post(`${this.apiUrl}`, attendanceData);\n  }\n  // Get all attendance records\n  getAllAttendance() {\n    return this.http.get(`${this.apiUrl}`).pipe(tap(student => console.log(\"all\", student)));\n  }\n  getAttendanceByUserId(userId) {\n    return this.http.get('http://localhost:9000/api/attendance/' + userId);\n  }\n  static #_ = this.ɵfac = function AttendanceService_Factory(t) {\n    return new (t || AttendanceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AttendanceService,\n    factory: AttendanceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["tap","AttendanceService","constructor","http","apiUrl","createAttendance","attendanceData","post","getAllAttendance","get","pipe","student","console","log","getAttendanceByUserId","userId","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Mehdi\\Desktop\\Angular\\admin-School\\src\\app\\attendance.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, tap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AttendanceService {\n\n  private apiUrl = 'http://localhost:9000/api/attendance'; \n  constructor(private http:HttpClient) { }\n\n  // Create a new attendance record\n  createAttendance(attendanceData: any): Observable<any> {\n    return this.http.post(`${this.apiUrl}`, attendanceData);\n  }\n\n  // Get all attendance records\n  getAllAttendance(): Observable<any[]> {\n    return this.http.get<any[]>(`${this.apiUrl}`).pipe(\n      tap(student=>console.log(\"all\",student)),\n      //catchError(this.handleError)\n    )\n  }\n\n  getAttendanceByUserId(userId: string): Observable<any> {\n    return this.http.get('http://localhost:9000/api/attendance/'+userId);\n  }\n}\n"],"mappings":"AAEA,SAAqBA,GAAG,QAAQ,MAAM;;;AAKtC,OAAM,MAAOC,iBAAiB;EAG5BC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IADhB,KAAAC,MAAM,GAAG,sCAAsC;EAChB;EAEvC;EACAC,gBAAgBA,CAACC,cAAmB;IAClC,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,MAAM,EAAE,EAAEE,cAAc,CAAC;EACzD;EAEA;EACAE,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAQ,GAAG,IAAI,CAACL,MAAM,EAAE,CAAC,CAACM,IAAI,CAChDV,GAAG,CAACW,OAAO,IAAEC,OAAO,CAACC,GAAG,CAAC,KAAK,EAACF,OAAO,CAAC,CAAC,CAEzC;EACH;EAEAG,qBAAqBA,CAACC,MAAc;IAClC,OAAO,IAAI,CAACZ,IAAI,CAACM,GAAG,CAAC,uCAAuC,GAACM,MAAM,CAAC;EACtE;EAAC,QAAAC,CAAA,G;qBApBUf,iBAAiB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAjBpB,iBAAiB;IAAAqB,OAAA,EAAjBrB,iBAAiB,CAAAsB,IAAA;IAAAC,UAAA,EAFhB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}