{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nexport let AdmissionComponent = class AdmissionComponent {\n  constructor(userService, formBuilder) {\n    this.userService = userService;\n    this.formBuilder = formBuilder;\n    this.users = [];\n    this.userForm = new FormGroup({});\n    this.userForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      register: ['', Validators.required],\n      genre: ['', Validators.required],\n      dateN: ['', Validators.required],\n      adresse: ['', Validators.required],\n      role: ['', Validators.required],\n      father: ['', Validators.required],\n      profession: ['', Validators.required],\n      nationalId: ['', Validators.required],\n      educat: ['', Validators.required],\n      mobile: ['', Validators.required],\n      email: ['', Validators.required],\n      salaire: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    throw new Error('Method not implemented.');\n  }\n  addUser() {\n    if (this.userForm.valid) {\n      const newUser = this.userForm.value; // Get the form data\n      // Call the createUser method from your user service\n      this.userService.createUser(newUser).subscribe(user => {\n        console.log('User added:', user);\n        // Optionally, reset the form\n        this.userForm.reset();\n      });\n    }\n  }\n};\nAdmissionComponent = __decorate([Component({\n  selector: 'app-admission',\n  templateUrl: './admission.component.html',\n  styleUrls: ['./admission.component.css']\n})], AdmissionComponent);","map":{"version":3,"names":["Component","FormGroup","Validators","AdmissionComponent","constructor","userService","formBuilder","users","userForm","group","name","required","register","genre","dateN","adresse","role","father","profession","nationalId","educat","mobile","email","salaire","ngOnInit","Error","addUser","valid","newUser","value","createUser","subscribe","user","console","log","reset","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Mehdi\\Desktop\\Angular\\admin-School\\src\\app\\admission\\admission.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { IUser } from 'src/models';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-admission',\n  templateUrl: './admission.component.html',\n  styleUrls: ['./admission.component.css']\n})\nexport class AdmissionComponent implements OnInit {\n  users: IUser[]=[];\n  userForm: FormGroup= new FormGroup({});;\n  constructor(private userService: UserService,private formBuilder: FormBuilder) {\n    this.userForm = this.formBuilder.group({\nname: ['', Validators.required],\nregister: ['', Validators.required],\ngenre: ['', Validators.required],\ndateN: ['', Validators.required],\nadresse: ['', Validators.required],\nrole: ['', Validators.required],\nfather: ['', Validators.required],\nprofession: ['', Validators.required],\nnationalId: ['', Validators.required],\neducat: ['', Validators.required],\nmobile: ['', Validators.required],\nemail: ['', Validators.required],\nsalaire: ['', Validators.required],\n      \n    });\n  }\n  ngOnInit(): void {\n    throw new Error('Method not implemented.');\n  }\n  addUser() {\n    if (this.userForm.valid) {\n      const newUser = this.userForm.value; // Get the form data\n\n      // Call the createUser method from your user service\n      this.userService.createUser(newUser).subscribe((user) => {\n        console.log('User added:', user);\n        // Optionally, reset the form\n        this.userForm.reset();\n      });\n    }\n  }\n \n  \n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAGjD,SAAsBC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAM5D,WAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAG7BC,YAAoBC,WAAwB,EAASC,WAAwB;IAAzD,KAAAD,WAAW,GAAXA,WAAW;IAAsB,KAAAC,WAAW,GAAXA,WAAW;IAFhE,KAAAC,KAAK,GAAU,EAAE;IACjB,KAAAC,QAAQ,GAAa,IAAIP,SAAS,CAAC,EAAE,CAAC;IAEpC,IAAI,CAACO,QAAQ,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MAC3CC,IAAI,EAAE,CAAC,EAAE,EAAER,UAAU,CAACS,QAAQ,CAAC;MAC/BC,QAAQ,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACS,QAAQ,CAAC;MACnCE,KAAK,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACS,QAAQ,CAAC;MAChCG,KAAK,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACS,QAAQ,CAAC;MAChCI,OAAO,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACS,QAAQ,CAAC;MAClCK,IAAI,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACS,QAAQ,CAAC;MAC/BM,MAAM,EAAE,CAAC,EAAE,EAAEf,UAAU,CAACS,QAAQ,CAAC;MACjCO,UAAU,EAAE,CAAC,EAAE,EAAEhB,UAAU,CAACS,QAAQ,CAAC;MACrCQ,UAAU,EAAE,CAAC,EAAE,EAAEjB,UAAU,CAACS,QAAQ,CAAC;MACrCS,MAAM,EAAE,CAAC,EAAE,EAAElB,UAAU,CAACS,QAAQ,CAAC;MACjCU,MAAM,EAAE,CAAC,EAAE,EAAEnB,UAAU,CAACS,QAAQ,CAAC;MACjCW,KAAK,EAAE,CAAC,EAAE,EAAEpB,UAAU,CAACS,QAAQ,CAAC;MAChCY,OAAO,EAAE,CAAC,EAAE,EAAErB,UAAU,CAACS,QAAQ;KAE5B,CAAC;EACJ;EACAa,QAAQA,CAAA;IACN,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EACAC,OAAOA,CAAA;IACL,IAAI,IAAI,CAAClB,QAAQ,CAACmB,KAAK,EAAE;MACvB,MAAMC,OAAO,GAAG,IAAI,CAACpB,QAAQ,CAACqB,KAAK,CAAC,CAAC;MAErC;MACA,IAAI,CAACxB,WAAW,CAACyB,UAAU,CAACF,OAAO,CAAC,CAACG,SAAS,CAAEC,IAAI,IAAI;QACtDC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEF,IAAI,CAAC;QAChC;QACA,IAAI,CAACxB,QAAQ,CAAC2B,KAAK,EAAE;MACvB,CAAC,CAAC;;EAEN;CAGD;AAtCYhC,kBAAkB,GAAAiC,UAAA,EAL9BpC,SAAS,CAAC;EACTqC,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EACWpC,kBAAkB,CAsC9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}