{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../user.service\";\nimport * as i2 from \"../payment.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction PaymentComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 31);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.successMessage, \" \");\n  }\n}\nfunction PaymentComponent_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 32);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", item_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r2.name);\n  }\n}\nexport class PaymentComponent {\n  constructor(userService, payment) {\n    this.userService = userService;\n    this.payment = payment;\n    this.employees = [];\n    this.today = \"\";\n    this.dts = '';\n    this.bonus = \"0\";\n    this.showMessage = false;\n    this.successMessage = '';\n  }\n  ngOnInit() {\n    this.dates();\n    this.userService.getAll().subscribe(data => {\n      // Filter users by role 'student'\n      this.employees = data.filter(user => user.role !== 'Student');\n      this.selectedOption = this.employees;\n    });\n  }\n  dates() {\n    // Create a new Date object\n    const currentDate = new Date();\n    // Get the current year\n    const year = currentDate.getFullYear();\n    // Get the current month (0-11, where 0 is January and 11 is December)\n    const month = currentDate.getMonth() + 1; // Adding 1 to make it 1-based\n    // Get the current day of the month (1-31)\n    const day = currentDate.getDate();\n    // Get the current day of the week (0-6, where 0 is Sunday and 6 is Saturday)\n    const dayOfWeek = currentDate.getDay();\n    // Create an array of day names\n    const daysOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    // Get the name of the current day\n    const currentDayName = daysOfWeek[dayOfWeek];\n    this.dts = `${month}/${day}/${year}`;\n    console.log(`Today is ${currentDayName}, ${month}/${day}/${year}`);\n  }\n  addPayment() {\n    const paymentData = {\n      userId: this.selectedOption._id,\n      amount: parseInt(this.selectedOption.salaire) + parseInt(this.bonus),\n      paymentDate: this.today,\n      paymentType: 'regularPayment' // Replace with the payment type (e.g., 'collectionFee' or 'regularPayment')\n      // Add any other payment details as needed\n    };\n\n    console.log(this.today);\n    this.payment.createPayment(paymentData).subscribe(response => {\n      console.log('Payment added successfully:', response);\n      // You can perform additional actions after a successful payment creation\n    }, error => {\n      console.error('Error adding payment:', error);\n      // Handle errors appropriately (e.g., show an error message to the user)\n    });\n  }\n\n  checkEmployeePaymentStatus(employeeId) {\n    this.payment.hasEmployeeBeenPaidThisMonth(employeeId, this.today).subscribe(hasBeenPaid => {\n      if (hasBeenPaid) {\n        // Employee has already been paid for this month, handle accordingly\n        console.log('Employee has already been paid for this month.');\n        console.log(this.today);\n        this.successMessage = 'Employee has already been paid for this month', this.showSuccessMessage();\n      } else {\n        // Employee has not been paid for this month, proceed with adding a new payment\n        this.addPayment();\n        this.successMessage = 'Payment added successfully', this.showSuccessMessage();\n      }\n    }, error => {\n      console.error('Error checking payment status:', error);\n      // Handle errors appropriately\n    });\n  }\n\n  showSuccessMessage() {\n    //this.successMessage = 'Classe ajoutée avec succès';\n    this.showMessage = true;\n    // Hide the message after a certain time (e.g., 5 seconds)\n    setTimeout(() => {\n      this.showMessage = false;\n      this.successMessage = '';\n      // this.router.navigate(['/dashboard/classe']);\n    }, 5000);\n  }\n  static #_ = this.ɵfac = function PaymentComponent_Factory(t) {\n    return new (t || PaymentComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.PaymentService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PaymentComponent,\n    selectors: [[\"app-payment\"]],\n    decls: 55,\n    vars: 9,\n    consts: [[4, \"ngIf\"], [1, \"d-flex\", \"justify-content-between\"], [1, \"form-group\"], [\"for\", \"exampleFormControlSelect1\"], [\"id\", \"exampleFormControlSelect1\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"exampleFormControlInput1\"], [\"type\", \"text\", \"id\", \"exampleFormControlInput1\", 1, \"form-control\", 3, \"value\"], [1, \"container\"], [1, \"row\", \"gutters\"], [1, \"col-xl-3\", \"col-lg-3\", \"col-md-12\", \"col-sm-12\", \"col-12\"], [1, \"card\", \"h-100\"], [1, \"card-body\"], [1, \"account-settings\"], [1, \"user-profile\"], [1, \"user-avatar\"], [\"src\", \"https://bootdey.com/img/Content/avatar/avatar7.png\", \"alt\", \"Maxwell Admin\"], [1, \"user-name\"], [1, \"user-email\"], [1, \"about\"], [1, \"col-xl-9\", \"col-lg-9\", \"col-md-12\", \"col-sm-12\", \"col-12\"], [1, \"col-xl-12\", \"col-lg-12\", \"col-md-12\", \"col-sm-12\", \"col-12\"], [1, \"col-xl-6\", \"col-lg-6\", \"col-md-6\", \"col-sm-6\", \"col-12\"], [\"for\", \"fullName\"], [\"type\", \"month\", \"id\", \"fullName\", \"placeholder\", \"Choisire\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"eMail\"], [\"type\", \"text\", \"id\", \"eMail\", 1, \"form-control\", 3, \"value\"], [\"for\", \"phone\"], [\"type\", \"text\", \"id\", \"phone\", \"placeholder\", \"Bonus\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"text-right\"], [\"type\", \"button\", \"id\", \"submit\", \"name\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"role\", \"alert\", 1, \"alert\", \"alert-primary\"], [3, \"ngValue\"]],\n    template: function PaymentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, PaymentComponent_div_0_Template, 3, 1, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"label\", 3);\n        i0.ɵɵtext(4, \"Employee\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"select\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function PaymentComponent_Template_select_ngModelChange_5_listener($event) {\n          return ctx.selectedOption = $event;\n        });\n        i0.ɵɵtemplate(6, PaymentComponent_option_6_Template, 2, 2, \"option\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 2)(8, \"label\", 6);\n        i0.ɵɵtext(9, \"Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 8)(12, \"div\", 9)(13, \"div\", 10)(14, \"div\", 11)(15, \"div\", 12)(16, \"div\", 13)(17, \"div\", 14)(18, \"div\", 15);\n        i0.ɵɵelement(19, \"img\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"h5\", 17);\n        i0.ɵɵtext(21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"h6\", 18);\n        i0.ɵɵtext(23);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"div\", 19)(25, \"h5\");\n        i0.ɵɵtext(26, \"About\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"p\");\n        i0.ɵɵtext(28, \"I'm Yuki. Full Stack Designer I enjoy creating user-centric, delightful and human experiences.\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(29, \"div\", 20)(30, \"div\", 11)(31, \"div\", 12)(32, \"div\", 9);\n        i0.ɵɵelement(33, \"div\", 21);\n        i0.ɵɵelementStart(34, \"div\", 22)(35, \"div\", 2)(36, \"label\", 23);\n        i0.ɵɵtext(37, \"Le Mois\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"input\", 24);\n        i0.ɵɵlistener(\"ngModelChange\", function PaymentComponent_Template_input_ngModelChange_38_listener($event) {\n          return ctx.today = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(39, \"div\", 22)(40, \"div\", 2)(41, \"label\", 25);\n        i0.ɵɵtext(42, \"Salaire\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(43, \"input\", 26);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(44, \"div\", 22)(45, \"div\", 2)(46, \"label\", 27);\n        i0.ɵɵtext(47, \"Bonus\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(48, \"input\", 28);\n        i0.ɵɵlistener(\"ngModelChange\", function PaymentComponent_Template_input_ngModelChange_48_listener($event) {\n          return ctx.bonus = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(49, \"div\", 22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(50, \"div\", 9)(51, \"div\", 21)(52, \"div\", 29)(53, \"button\", 30);\n        i0.ɵɵtext(54, \"Update\");\n        i0.ɵɵelementEnd()()()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.showMessage);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedOption);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.employees);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"value\", ctx.dts);\n        i0.ɵɵadvance(11);\n        i0.ɵɵtextInterpolate(ctx.selectedOption.role);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.selectedOption.email);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngModel\", ctx.today);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"value\", ctx.selectedOption.salaire);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.bonus);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgModel],\n    styles: [\".account-settings[_ngcontent-%COMP%]   .user-profile[_ngcontent-%COMP%] {\\n    margin: 0 0 1rem 0;\\n    padding-bottom: 1rem;\\n    text-align: center;\\n}\\n.account-settings[_ngcontent-%COMP%]   .user-profile[_ngcontent-%COMP%]   .user-avatar[_ngcontent-%COMP%] {\\n    margin: 0 0 1rem 0;\\n}\\n.account-settings[_ngcontent-%COMP%]   .user-profile[_ngcontent-%COMP%]   .user-avatar[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n    width: 90px;\\n    height: 90px;\\n    border-radius: 100px;\\n}\\n.account-settings[_ngcontent-%COMP%]   .user-profile[_ngcontent-%COMP%]   h5.user-name[_ngcontent-%COMP%] {\\n    margin: 0 0 0.5rem 0;\\n}\\n.account-settings[_ngcontent-%COMP%]   .user-profile[_ngcontent-%COMP%]   h6.user-email[_ngcontent-%COMP%] {\\n    margin: 0;\\n    font-size: 0.8rem;\\n    font-weight: 400;\\n    color: #9fa8b9;\\n}\\n.account-settings[_ngcontent-%COMP%]   .about[_ngcontent-%COMP%] {\\n    margin: 2rem 0 0 0;\\n    text-align: center;\\n}\\n.account-settings[_ngcontent-%COMP%]   .about[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%] {\\n    margin: 0 0 15px 0;\\n    color: #007ae1;\\n}\\n.account-settings[_ngcontent-%COMP%]   .about[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n    font-size: 0.825rem;\\n}\\n.form-control[_ngcontent-%COMP%] {\\n    border: 1px solid #cfd1d8;\\n    border-radius: 2px;\\n    font-size: .825rem;\\n    background: #ffffff;\\n    color: #2e323c;\\n}\\n\\n.card[_ngcontent-%COMP%] {\\n    background: #ffffff;\\n    border-radius: 5px;\\n    border: 0;\\n    margin-bottom: 1rem;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGF5bWVudC9wYXltZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7SUFDbEIsb0JBQW9CO0lBQ3BCLGtCQUFrQjtBQUN0QjtBQUNBO0lBQ0ksa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSxXQUFXO0lBQ1gsWUFBWTtJQUdaLG9CQUFvQjtBQUN4QjtBQUNBO0lBQ0ksb0JBQW9CO0FBQ3hCO0FBQ0E7SUFDSSxTQUFTO0lBQ1QsaUJBQWlCO0lBQ2pCLGdCQUFnQjtJQUNoQixjQUFjO0FBQ2xCO0FBQ0E7SUFDSSxrQkFBa0I7SUFDbEIsa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSxrQkFBa0I7SUFDbEIsY0FBYztBQUNsQjtBQUNBO0lBQ0ksbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFDSSx5QkFBeUI7SUFHekIsa0JBQWtCO0lBQ2xCLGtCQUFrQjtJQUNsQixtQkFBbUI7SUFDbkIsY0FBYztBQUNsQjs7QUFFQTtJQUNJLG1CQUFtQjtJQUduQixrQkFBa0I7SUFDbEIsU0FBUztJQUNULG1CQUFtQjtBQUN2QiIsInNvdXJjZXNDb250ZW50IjpbIi5hY2NvdW50LXNldHRpbmdzIC51c2VyLXByb2ZpbGUge1xyXG4gICAgbWFyZ2luOiAwIDAgMXJlbSAwO1xyXG4gICAgcGFkZGluZy1ib3R0b206IDFyZW07XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuLmFjY291bnQtc2V0dGluZ3MgLnVzZXItcHJvZmlsZSAudXNlci1hdmF0YXIge1xyXG4gICAgbWFyZ2luOiAwIDAgMXJlbSAwO1xyXG59XHJcbi5hY2NvdW50LXNldHRpbmdzIC51c2VyLXByb2ZpbGUgLnVzZXItYXZhdGFyIGltZyB7XHJcbiAgICB3aWR0aDogOTBweDtcclxuICAgIGhlaWdodDogOTBweDtcclxuICAgIC13ZWJraXQtYm9yZGVyLXJhZGl1czogMTAwcHg7XHJcbiAgICAtbW96LWJvcmRlci1yYWRpdXM6IDEwMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTAwcHg7XHJcbn1cclxuLmFjY291bnQtc2V0dGluZ3MgLnVzZXItcHJvZmlsZSBoNS51c2VyLW5hbWUge1xyXG4gICAgbWFyZ2luOiAwIDAgMC41cmVtIDA7XHJcbn1cclxuLmFjY291bnQtc2V0dGluZ3MgLnVzZXItcHJvZmlsZSBoNi51c2VyLWVtYWlsIHtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIGZvbnQtc2l6ZTogMC44cmVtO1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIGNvbG9yOiAjOWZhOGI5O1xyXG59XHJcbi5hY2NvdW50LXNldHRpbmdzIC5hYm91dCB7XHJcbiAgICBtYXJnaW46IDJyZW0gMCAwIDA7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuLmFjY291bnQtc2V0dGluZ3MgLmFib3V0IGg1IHtcclxuICAgIG1hcmdpbjogMCAwIDE1cHggMDtcclxuICAgIGNvbG9yOiAjMDA3YWUxO1xyXG59XHJcbi5hY2NvdW50LXNldHRpbmdzIC5hYm91dCBwIHtcclxuICAgIGZvbnQtc2l6ZTogMC44MjVyZW07XHJcbn1cclxuLmZvcm0tY29udHJvbCB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2ZkMWQ4O1xyXG4gICAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAycHg7XHJcbiAgICAtbW96LWJvcmRlci1yYWRpdXM6IDJweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDJweDtcclxuICAgIGZvbnQtc2l6ZTogLjgyNXJlbTtcclxuICAgIGJhY2tncm91bmQ6ICNmZmZmZmY7XHJcbiAgICBjb2xvcjogIzJlMzIzYztcclxufVxyXG5cclxuLmNhcmQge1xyXG4gICAgYmFja2dyb3VuZDogI2ZmZmZmZjtcclxuICAgIC13ZWJraXQtYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgLW1vei1ib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBib3JkZXI6IDA7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxcmVtO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","successMessage","ɵɵproperty","item_r2","ɵɵtextInterpolate","name","PaymentComponent","constructor","userService","payment","employees","today","dts","bonus","showMessage","ngOnInit","dates","getAll","subscribe","data","filter","user","role","selectedOption","currentDate","Date","year","getFullYear","month","getMonth","day","getDate","dayOfWeek","getDay","daysOfWeek","currentDayName","console","log","addPayment","paymentData","userId","_id","amount","parseInt","salaire","paymentDate","paymentType","createPayment","response","error","checkEmployeePaymentStatus","employeeId","hasEmployeeBeenPaidThisMonth","hasBeenPaid","showSuccessMessage","setTimeout","_","ɵɵdirectiveInject","i1","UserService","i2","PaymentService","_2","selectors","decls","vars","consts","template","PaymentComponent_Template","rf","ctx","ɵɵtemplate","PaymentComponent_div_0_Template","ɵɵlistener","PaymentComponent_Template_select_ngModelChange_5_listener","$event","PaymentComponent_option_6_Template","ɵɵelement","PaymentComponent_Template_input_ngModelChange_38_listener","PaymentComponent_Template_input_ngModelChange_48_listener","email"],"sources":["C:\\Users\\Mehdi\\Desktop\\Angular\\admin-School\\src\\app\\payment\\payment.component.ts","C:\\Users\\Mehdi\\Desktop\\Angular\\admin-School\\src\\app\\payment\\payment.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { IUser } from 'src/models';\nimport { UserService } from '../user.service';\nimport { PaymentService } from '../payment.service';\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.css']\n})\nexport class PaymentComponent implements OnInit {\n  employees:IUser[]=[];\n  today=\"\";\n  dts= '';\n  selectedOption:IUser|any;\n  bonus:string=\"0\"\n  showMessage = false;\n  successMessage = '';\n  constructor(private userService:UserService,private payment:PaymentService) {\n   \n  }\n  ngOnInit(): void {\n    this.dates()\n    this.userService.getAll()\n\n  .subscribe((data: IUser[]) => {\n    // Filter users by role 'student'\n    this.employees = data.filter(user => user.role !== 'Student');\n    this.selectedOption=this.employees;\n    \n  });\n  }\n\n  dates(){\n    // Create a new Date object\nconst currentDate = new Date();\n\n// Get the current year\nconst year = currentDate.getFullYear();\n\n// Get the current month (0-11, where 0 is January and 11 is December)\nconst month = currentDate.getMonth() + 1; // Adding 1 to make it 1-based\n\n// Get the current day of the month (1-31)\nconst day = currentDate.getDate();\n\n// Get the current day of the week (0-6, where 0 is Sunday and 6 is Saturday)\nconst dayOfWeek = currentDate.getDay();\n\n// Create an array of day names\nconst daysOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n// Get the name of the current day\nconst currentDayName = daysOfWeek[dayOfWeek];\nthis.dts=`${month}/${day}/${year}`\nconsole.log(`Today is ${currentDayName}, ${month}/${day}/${year}`);\n\n  }\n  addPayment(): void {\n    const paymentData = {\n      userId: this.selectedOption._id, // Replace with the user ID for whom the payment is being made\n      amount: parseInt(this.selectedOption.salaire)+parseInt(this.bonus),  // Replace with the payment amount\n      paymentDate: this.today,  // Replace with the payment date\n      paymentType: 'regularPayment',  // Replace with the payment type (e.g., 'collectionFee' or 'regularPayment')\n      // Add any other payment details as needed\n    };\n    console.log(this.today);\n    this.payment.createPayment(paymentData).subscribe(\n      (response) => {\n        console.log('Payment added successfully:', response);\n        // You can perform additional actions after a successful payment creation\n      },\n      (error) => {\n        console.error('Error adding payment:', error);\n        // Handle errors appropriately (e.g., show an error message to the user)\n      }\n    );\n  }\n  checkEmployeePaymentStatus(employeeId: string): void {\n    this.payment.hasEmployeeBeenPaidThisMonth(employeeId,this.today).subscribe(\n      (hasBeenPaid) => {\n        if (hasBeenPaid) {\n          // Employee has already been paid for this month, handle accordingly\n          console.log('Employee has already been paid for this month.');\n          console.log(this.today);\n          this.successMessage='Employee has already been paid for this month',\n          this.showSuccessMessage();\n        } else {\n          // Employee has not been paid for this month, proceed with adding a new payment\n          this.addPayment();\n          this.successMessage='Payment added successfully',\n          this.showSuccessMessage();\n        }\n      },\n      (error) => {\n        console.error('Error checking payment status:', error);\n        // Handle errors appropriately\n      }\n    );\n  }\n  showSuccessMessage() {\n    //this.successMessage = 'Classe ajoutée avec succès';\n    this.showMessage = true;\n  \n    // Hide the message after a certain time (e.g., 5 seconds)\n    setTimeout(() => {\n      this.showMessage = false;\n      this.successMessage = '';\n     // this.router.navigate(['/dashboard/classe']);\n    }, 5000);\n    \n  }\n}\n","<div *ngIf=\"showMessage\">\n    <div class=\"alert alert-primary\" role=\"alert\">\n        {{ successMessage }}\n        </div>\n    </div>\n    <div class=\"d-flex justify-content-between\">\n        \n        <div class=\"form-group\">\n            <label for=\"exampleFormControlSelect1\">Employee</label>\n            <select [(ngModel)]=\"selectedOption\" class=\"form-control\" id=\"exampleFormControlSelect1\">\n                <option *ngFor=\"let item of employees\" [ngValue]=\"item\">{{item.name}}</option>\n                \n            </select>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"exampleFormControlInput1\">Date</label>\n            <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" [value]=\"dts\">\n        </div>\n    </div>\n    \n    <div class=\"container\">\n        <div class=\"row gutters\">\n        <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 col-12\">\n        <div class=\"card h-100\">\n            <div class=\"card-body\">\n                <div class=\"account-settings\">\n                    <div class=\"user-profile\">\n                        <div class=\"user-avatar\">\n                            <img src=\"https://bootdey.com/img/Content/avatar/avatar7.png\" alt=\"Maxwell Admin\">\n                        </div>\n                        <h5 class=\"user-name\">{{selectedOption.role}}</h5>\n                        <h6 class=\"user-email\">{{selectedOption.email}}</h6>\n                    </div>\n                    <div class=\"about\">\n                        <h5>About</h5>\n                        <p>I'm Yuki. Full Stack Designer I enjoy creating user-centric, delightful and human experiences.</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </div>\n        <div class=\"col-xl-9 col-lg-9 col-md-12 col-sm-12 col-12\">\n        <div class=\"card h-100\">\n            <div class=\"card-body\">\n                <div class=\"row gutters\">\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n                        \n                    </div>\n                    <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\n                        <div class=\"form-group\">\n                            <label for=\"fullName\">Le Mois</label>\n                            <input type=\"month\" [(ngModel)]=\"today\" class=\"form-control\" id=\"fullName\" placeholder=\"Choisire\">\n                        </div>\n                    </div>\n                    <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\n                        <div class=\"form-group\">\n                            <label for=\"eMail\">Salaire</label>\n                            <input type=\"text\" class=\"form-control\" id=\"eMail\" [value]=\"selectedOption.salaire\">\n                        </div>\n                    </div>\n                    <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\n                        <div class=\"form-group\">\n                            <label for=\"phone\">Bonus</label>\n                            <input type=\"text\" class=\"form-control\" id=\"phone\" placeholder=\"Bonus\" [(ngModel)]=\"bonus\">\n                        </div>\n                    </div>\n                    <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12\">\n                        \n                    </div>\n                </div>\n              \n                <div class=\"row gutters\">\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n                        <div class=\"text-right\">\n                            \n                            <button type=\"button\" id=\"submit\" name=\"submit\" class=\"btn btn-primary\">Update</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </div>\n        </div>\n        </div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}