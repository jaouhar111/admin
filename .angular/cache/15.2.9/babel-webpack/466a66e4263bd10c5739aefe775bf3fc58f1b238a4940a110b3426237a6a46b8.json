{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/classe.service\";\nimport * as i2 from \"src/app/attendance.service\";\nfunction AttendanceComponent_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", item_r2.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r2.name);\n  }\n}\nconst _c0 = function () {\n  return {\n    standalone: true\n  };\n};\nfunction AttendanceComponent_div_11_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 17)(1, \"th\", 18);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 19);\n    i0.ɵɵelement(4, \"img\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 19);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 19);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\", 19)(10, \"div\", 21)(11, \"div\", 22)(12, \"input\", 23);\n    i0.ɵɵlistener(\"ngModelChange\", function AttendanceComponent_div_11_tr_15_Template_input_ngModelChange_12_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const student_r5 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.selectedStatus[student_r5._id] = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"label\", 24);\n    i0.ɵɵtext(14, \"P\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 22)(16, \"input\", 25);\n    i0.ɵɵlistener(\"ngModelChange\", function AttendanceComponent_div_11_tr_15_Template_input_ngModelChange_16_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const student_r5 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.selectedStatus[student_r5._id] = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"label\", 24);\n    i0.ɵɵtext(18, \"L\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"div\", 22)(20, \"input\", 26);\n    i0.ɵɵlistener(\"ngModelChange\", function AttendanceComponent_div_11_tr_15_Template_input_ngModelChange_20_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const student_r5 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.selectedStatus[student_r5._id] = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"label\", 24);\n    i0.ɵɵtext(22, \"A\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const student_r5 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", student_r5.register, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", student_r5.name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", student_r5.father, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"id\", \"radio-\" + student_r5._id);\n    i0.ɵɵpropertyInterpolate(\"name\", \"radio-group-\" + student_r5._id);\n    i0.ɵɵproperty(\"ngModelOptions\", i0.ɵɵpureFunction0(18, _c0))(\"ngModel\", ctx_r4.selectedStatus[student_r5._id]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", \"radio-\" + student_r5._id);\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"id\", \"radio-2-\" + student_r5._id);\n    i0.ɵɵpropertyInterpolate(\"name\", \"radio-group-\" + student_r5._id);\n    i0.ɵɵproperty(\"ngModelOptions\", i0.ɵɵpureFunction0(19, _c0))(\"ngModel\", ctx_r4.selectedStatus[student_r5._id]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", \"radio-2-\" + student_r5._id);\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"id\", \"radio-3-\" + student_r5._id);\n    i0.ɵɵpropertyInterpolate(\"name\", \"radio-group-\" + student_r5._id);\n    i0.ɵɵproperty(\"ngModelOptions\", i0.ɵɵpureFunction0(20, _c0))(\"ngModel\", ctx_r4.selectedStatus[student_r5._id]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", \"radio-3-\" + student_r5._id);\n  }\n}\nfunction AttendanceComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"table\", 13)(2, \"thead\", 14)(3, \"tr\")(4, \"th\", 15);\n    i0.ɵɵtext(5, \" ID \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\", 15);\n    i0.ɵɵtext(7, \" Photo \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\", 15);\n    i0.ɵɵtext(9, \" NOM D'\\u00C9TUDIANT \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\", 15);\n    i0.ɵɵtext(11, \" P\\u00C8RE \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"th\", 15);\n    i0.ɵɵtext(13, \" Status \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(14, \"tbody\");\n    i0.ɵɵtemplate(15, AttendanceComponent_div_11_tr_15_Template, 23, 21, \"tr\", 16);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const classroom_r3 = ctx.$implicit;\n    i0.ɵɵadvance(15);\n    i0.ɵɵproperty(\"ngForOf\", classroom_r3.students);\n  }\n}\nexport class AttendanceComponent {\n  constructor(Cla, att) {\n    this.Cla = Cla;\n    this.att = att;\n    this.today = new Date();\n    this.cla = 'Classe A';\n    //selectedStatus: { studentId: string, status: string }[] = [];\n    this.selectedStatus = {};\n    this.Classes = [];\n    //Students:IClassroom[]=[]\n    this.filteredList = [];\n  }\n  ngOnInit() {\n    this.Cla.getClasse().subscribe(classe => {\n      this.Classes = classe;\n      this.updateFilteredList();\n    });\n  }\n  updateFilteredList() {\n    this.filteredList = this.Classes.filter(classroom => classroom.name === this.cla);\n    console.log(this.filteredList);\n  }\n  onAdd() {\n    // console.log('Before loop: selectedStatus', this.selectedStatus);\n    for (const studentId of Object.keys(this.selectedStatus)) {\n      const status = this.selectedStatus[studentId];\n      // Now you can use studentId and status in your loop\n      //console.log(`Student ID: ${studentId}, Status: ${status}`);\n      // Check if both studentId and status are defined\n      if (studentId && status) {\n        // Create an attendance object based on the selected data\n        const attendanceData = {\n          iduser: studentId,\n          status: status\n        };\n        //console.log('Sending attendanceData', attendanceData);\n        // Send the attendance data for this student\n        this.att.createAttendance(attendanceData).subscribe(response => {\n          // Handle the response from the API if needed\n          console.log('API response:', response);\n        });\n      } else {\n        // console.error('Both studentId and status must be provided for each student.');\n      }\n    }\n    //console.log('After loop');\n  }\n}\n_class = AttendanceComponent;\n_class.ɵfac = function AttendanceComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ClasseService), i0.ɵɵdirectiveInject(i2.AttendanceService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-attendance\"]],\n  decls: 15,\n  vars: 8,\n  consts: [[1, \"flex\", \"justify-between\", \"max-h-18\"], [\"id\", \"small\", 1, \"block\", \"w-1/4\", \"p-2\", \"mb-6\", \"text-sm\", \"text-gray-900\", \"border\", \"border-gray-300\", \"rounded-lg\", \"bg-gray-50\", \"focus:ring-blue-500\", \"focus:border-blue-500\", \"dark:bg-gray-700\", \"dark:border-gray-600\", \"dark:placeholder-gray-400\", \"dark:text-white\", \"dark:focus:ring-blue-500\", \"dark:focus:border-blue-500\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"mb-6\", \"w-1/4\"], [\"type\", \"date\", 1, \"bg-gray-50\", \"border\", \"border-gray-300\", \"text-gray-900\", \"text-sm\", \"rounded-lg\", \"focus:ring-blue-500\", \"focus:border-blue-500\", \"block\", \"w-full\", \"p-2.5\", \"dark:bg-gray-700\", \"dark:border-gray-600\", \"dark:placeholder-gray-400\", \"dark:text-white\", \"dark:focus:ring-blue-500\", \"dark:focus:border-blue-500\", 3, \"ngModel\", \"ngModelChange\"], [1, \"flex\", \"flex-col\", \"justify-center\", \"items-center\"], [1, \"text-xl\", \"font-normal\"], [1, \"text-lg\", \"font-medium\"], [\"class\", \"flex justify-center overflow-x-auto mt-4\", 4, \"ngFor\", \"ngForOf\"], [1, \"flex\", \"items-center\", \"justify-center\", \"mt-8\"], [\"type\", \"button\", 1, \"text-white\", \"bg-[#4285F4]\", \"hover:bg-[#4285F4]/90\", \"focus:ring-4\", \"focus:outline-none\", \"focus:ring-[#4285F4]/50\", \"font-medium\", \"rounded-lg\", \"text-sm\", \"px-5\", \"py-2.5\", \"text-center\", \"inline-flex\", \"items-center\", \"dark:focus:ring-[#4285F4]/55\", \"mr-2\", \"mb-2\", 3, \"click\"], [3, \"value\"], [1, \"flex\", \"justify-center\", \"overflow-x-auto\", \"mt-4\"], [1, \"w-92\", \"text-sm\", \"text-left\", \"text-gray-500\"], [1, \"text-xs\", \"text-black\", \"uppercase\", \"bg-slate-200\"], [\"scope\", \"col\", 1, \"px-6\", \"py-3\"], [\"class\", \" border-b \", 4, \"ngFor\", \"ngForOf\"], [1, \"border-b\"], [\"scope\", \"row\", 1, \"px-6\", \"py-4\", \"font-medium\", \"whitespace-nowrap\", \"text-black\"], [1, \"px-6\", \"py-4\"], [\"src\", \"assets/images/avatar.png\", \"alt\", \"Rounded avatar\", 1, \"w-10\", \"h-10\", \"rounded-full\"], [1, \"flex\"], [1, \"flex\", \"items-center\", \"mr-4\"], [\"type\", \"radio\", \"value\", \"Present\", 1, \"w-4\", \"h-4\", \"text-blue-600\", \"bg-gray-100\", \"border-gray-300\", \"focus:ring-blue-500\", \"dark:focus:ring-blue-600\", 3, \"ngModelOptions\", \"ngModel\", \"id\", \"name\", \"ngModelChange\"], [1, \"ml-2\", \"text-sm\", \"font-medium\", \"text-gray-900\", \"dark:text-gray-300\", 3, \"for\"], [\"type\", \"radio\", \"value\", \"Late\", 1, \"w-4\", \"h-4\", \"text-gray-600\", \"bg-gray-100\", \"border-gray-300\", \"focus:ring-gray-500\", \"dark:focus:ring-blue-600\", 3, \"ngModelOptions\", \"ngModel\", \"id\", \"name\", \"ngModelChange\"], [\"type\", \"radio\", \"value\", \"Absent\", 1, \"w-4\", \"h-4\", \"text-red-600\", \"bg-gray-100\", \"border-gray-300\", \"focus:ring-red-500\", 3, \"ngModelOptions\", \"ngModel\", \"id\", \"name\", \"ngModelChange\"]],\n  template: function AttendanceComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"select\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function AttendanceComponent_Template_select_ngModelChange_1_listener($event) {\n        return ctx.cla = $event;\n      })(\"ngModelChange\", function AttendanceComponent_Template_select_ngModelChange_1_listener() {\n        return ctx.updateFilteredList();\n      });\n      i0.ɵɵtemplate(2, AttendanceComponent_option_2_Template, 2, 2, \"option\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 3)(4, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function AttendanceComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.today = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(5, \"div\", 5)(6, \"p\", 6);\n      i0.ɵɵtext(7);\n      i0.ɵɵpipe(8, \"date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"p\", 7);\n      i0.ɵɵtext(10, \"Veuillez marquer pr\\u00E9sence\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(11, AttendanceComponent_div_11_Template, 16, 1, \"div\", 8);\n      i0.ɵɵelementStart(12, \"div\", 9)(13, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function AttendanceComponent_Template_button_click_13_listener() {\n        return ctx.onAdd();\n      });\n      i0.ɵɵtext(14, \" Enregistrer \");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.cla);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.Classes);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.today);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate2(\" Pr\\u00E9sence non encore marqu\\u00E9e pour la \\\"\", ctx.cla, \"\\\" le \", i0.ɵɵpipeBind1(8, 6, ctx.today), \"\");\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.filteredList);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhdHRlbmRhbmNlLmNvbXBvbmVudC5jc3MifQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvYXR0ZW5kYW5jZS9hdHRlbmRhbmNlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLHdLQUF3SyIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","AttendanceComponent","constructor","Cla","att","Date","ngOnInit","getClasse","subscribe","classe","Classes","updateFilteredList","filteredList","filter","classroom","name","cla","console","log","onAdd","studentId","Object","keys","selectedStatus","status","attendanceData","iduser","createAttendance","response","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Mehdi\\Desktop\\Angular\\my-dashboard\\src\\app\\pages\\attendance\\attendance.component.html","C:\\Users\\Mehdi\\Desktop\\Angular\\my-dashboard\\src\\app\\pages\\attendance\\attendance.component.ts"],"sourcesContent":["<div class=\"flex justify-between max-h-18\">\n    \n    <select [(ngModel)]=\"cla\" (ngModelChange)=\"updateFilteredList()\"  id=\"small\" class=\"block w-1/4  p-2 mb-6 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\">\n      <option *ngFor=\"let item of Classes\" value=\"{{item.name}}\">{{item.name}}</option>\n    </select>\n\n<div class=\"mb-6 w-1/4\">\n    \n    <input type=\"date\" [(ngModel)]=\"today\"  class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\">\n</div>\n</div>\n<div class=\"flex flex-col justify-center items-center\">\n    <p class=\"text-xl font-normal\"> Présence non encore marquée pour la \"{{cla}}\" le {{today | date}}</p>\n    <p class=\"text-lg font-medium\">Veuillez marquer  présence</p>\n</div>\n\n\n<div *ngFor=\"let classroom of filteredList\" class=\"flex justify-center overflow-x-auto mt-4\">\n    <table  class=\"w-92 text-sm text-left text-gray-500\">\n        <thead class=\"text-xs  text-black uppercase bg-slate-200 \">\n            <tr>\n                <th scope=\"col\" class=\"px-6 py-3\">\n                  ID\t\n                </th>\n                <th scope=\"col\" class=\"px-6 py-3\">\n                Photo\n                </th>\n                <th scope=\"col\" class=\"px-6 py-3\">\n                    NOM D'ÉTUDIANT\n                </th>\n                <th scope=\"col\" class=\"px-6 py-3\">\n                    PÈRE\n                </th>\n                <th scope=\"col\" class=\"px-6 py-3\">\n                Status\n                </th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let student of classroom.students\"  class=\" border-b \">\n                <th scope=\"row\" class=\"px-6 py-4 font-medium  whitespace-nowrap text-black\">\n                   {{student.register}}\n                </th>\n                <td class=\"px-6 py-4\">\n                <img class=\"w-10 h-10 rounded-full\" src=\"assets/images/avatar.png\" alt=\"Rounded avatar\"/>\n                </td>\n                <td class=\"px-6 py-4\">\n                    {{student.name}}\n                </td>\n                <td class=\"px-6 py-4\">\n                    {{student.father}}\n                </td>\n                <td class=\"px-6 py-4\">\n                    \n<div class=\"flex\">\n    <div class=\"flex items-center mr-4\">\n        <input [ngModelOptions]=\"{ standalone: true }\"[(ngModel)]=\"selectedStatus[student._id]\" id=\"{{ 'radio-' + student._id }}\" type=\"radio\" value=\"Present\" name=\"{{ 'radio-group-' + student._id }}\" class=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 focus:ring-blue-500 dark:focus:ring-blue-600 \"/>\n        <label for=\"{{ 'radio-' + student._id }}\" class=\"ml-2 text-sm font-medium text-gray-900 dark:text-gray-300\">P</label>\n    </div>\n    <div class=\"flex items-center mr-4\">\n        <input [ngModelOptions]=\"{ standalone: true }\" [(ngModel)]=\"selectedStatus[student._id]\" id=\"{{ 'radio-2-' + student._id }}\" type=\"radio\" value=\"Late\" name=\"{{ 'radio-group-' + student._id }}\" class=\"w-4 h-4 text-gray-600 bg-gray-100 border-gray-300 focus:ring-gray-500 dark:focus:ring-blue-600 \"/>\n        <label for=\"{{ 'radio-2-' + student._id }}\" class=\"ml-2 text-sm font-medium text-gray-900 dark:text-gray-300\">L</label>\n    </div>\n    <div class=\"flex items-center mr-4\">\n        <input [ngModelOptions]=\"{ standalone: true }\"  [(ngModel)]=\"selectedStatus[student._id]\" id=\"{{ 'radio-3-' + student._id }}\" type=\"radio\" value=\"Absent\" name=\"{{ 'radio-group-' + student._id }}\" class=\"w-4 h-4 text-red-600 bg-gray-100 border-gray-300 focus:ring-red-500 \"/>\n        <label for=\"{{ 'radio-3-' + student._id }}\" class=\"ml-2 text-sm font-medium text-gray-900 dark:text-gray-300\">A</label>\n    </div>\n    </div>  \n        </td>\n        </tr>\n        </tbody>\n    </table>\n</div>\n<div class=\"flex items-center justify-center mt-8\">\n    <button type=\"button\" (click)=\"onAdd()\" class=\"text-white bg-[#4285F4] hover:bg-[#4285F4]/90 focus:ring-4 focus:outline-none focus:ring-[#4285F4]/50 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center dark:focus:ring-[#4285F4]/55 mr-2 mb-2\">\n        Enregistrer\n      </button>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { ClasseService } from 'src/app/classe.service';\nimport { IClassroom, IUser } from '../user';\nimport { AttendanceService } from 'src/app/attendance.service';\n\n\n@Component({\n  selector: 'app-attendance',\n  templateUrl: './attendance.component.html',\n  styleUrls: ['./attendance.component.css']\n})\nexport class AttendanceComponent implements OnInit {\n  today: Date = new Date();\n  cla:String='Classe A'\n  //selectedStatus: { studentId: string, status: string }[] = [];\n  selectedStatus: { [studentId: string]: string } = {};\n\n  Classes: IClassroom[] = [];\n  //Students:IClassroom[]=[]\n  filteredList: IClassroom[] = [];\n  constructor(private Cla:ClasseService,private att:AttendanceService){}\n  \n  ngOnInit(): void {\n    \n    this.Cla.getClasse()\n    .subscribe(classe =>{\n      this.Classes = classe;\n     \n      this.updateFilteredList()\n    });\n    \n  }\n  updateFilteredList() {\n    this.filteredList = this.Classes.filter((classroom) => classroom.name === this.cla);\n    console.log(this.filteredList);\n  }\n\n  onAdd() {\n   // console.log('Before loop: selectedStatus', this.selectedStatus);\n\nfor (const studentId of Object.keys(this.selectedStatus)) {\n\n  const status = this.selectedStatus[studentId];\n\n  // Now you can use studentId and status in your loop\n  //console.log(`Student ID: ${studentId}, Status: ${status}`);\n\n  // Check if both studentId and status are defined\n  if (studentId && status) {\n    // Create an attendance object based on the selected data\n    const attendanceData = {\n      iduser: studentId,\n      status: status,\n    };\n\n    //console.log('Sending attendanceData', attendanceData);\n\n    // Send the attendance data for this student\n    this.att.createAttendance(attendanceData).subscribe(response => {\n      // Handle the response from the API if needed\n      console.log('API response:', response);\n    });\n  } else {\n   // console.error('Both studentId and status must be provided for each student.');\n  }\n}\n\n//console.log('After loop');\n\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}