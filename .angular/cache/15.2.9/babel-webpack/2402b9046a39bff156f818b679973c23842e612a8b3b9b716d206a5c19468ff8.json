{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet HomeComponent = class HomeComponent {\n  constructor(userService, att) {\n    this.userService = userService;\n    this.att = att;\n    this.students = [];\n    this.Teachers = [];\n    this.attemp = [];\n    this.attstu = [];\n  }\n  ngOnInit() {\n    this.getStudent();\n    this.getProf();\n    this.getattEmp();\n    this.getattStu();\n  }\n  getStudent() {\n    this.userService.getStudent().subscribe(data => {\n      // Filter users by role 'student'\n      this.students = data.filter(user => user.role === 'Student');\n      console.log(this.students);\n    });\n  }\n  getProf() {\n    this.userService.getTeacher().subscribe(data => {\n      // Filter users by role 'student'\n      this.Teachers = data.filter(user => user.role !== 'Student');\n      //console.log(\"all teachers\"+JSON.stringify(this.Teachers));\n    });\n  }\n\n  getattEmp() {\n    this.att.getAllAttendance().subscribe(data => {\n      const uniqueNames = new Set();\n      // Filter users by role 'student'\n      this.attemp = data.filter(user => user.status === 'Present').filter(user => user.role !== 'Student').filter(user => {\n        // Check if the name is not already in the Set\n        if (!uniqueNames.has(user.name)) {\n          // Add the name to the Set\n          uniqueNames.add(user.name);\n          return true;\n        }\n        return false;\n      });\n      console.log(\"attendance employee\" + JSON.stringify(this.attemp));\n    });\n  }\n  getattStu() {\n    this.att.getAllAttendance().subscribe(data => {\n      // Filter users by role 'student'\n      this.attstu = data.filter(user => user.role === 'Student');\n      console.log(\"student absence\" + this.attstu);\n    });\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAU1C,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAMxBC,YAAoBC,WAA8B,EAASC,GAAqB;IAA5D,gBAAW,GAAXD,WAAW;IAA4B,QAAG,GAAHC,GAAG;IAJ9D,aAAQ,GAAY,EAAE;IACtB,aAAQ,GAAU,EAAE;IACpB,WAAM,GAAU,EAAE;IAClB,WAAM,GAAS,EAAE;EACiE;EAClFC,QAAQ;IACN,IAAI,CAACC,UAAU,EAAE;IACjB,IAAI,CAACC,OAAO,EAAE;IACd,IAAI,CAACC,SAAS,EAAE;IAChB,IAAI,CAACC,SAAS,EAAE;EAClB;EACAH,UAAU;IACR,IAAI,CAACH,WAAW,CAACG,UAAU,EAAE,CAC9BI,SAAS,CAAEC,IAAa,IAAI;MAC3B;MACA,IAAI,CAACC,QAAQ,GAAGD,IAAI,CAACE,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,SAAS,CAAC;MAC5DC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,QAAQ,CAAC;IAE5B,CAAC,CAAC;EACF;EAEAL,OAAO;IACL,IAAI,CAACJ,WAAW,CAACe,UAAU,EAAE,CAC5BR,SAAS,CAAEC,IAAa,IAAI;MAC3B;MACA,IAAI,CAACQ,QAAQ,GAAGR,IAAI,CAACE,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,SAAS,CAAC;MAC5D;IAGF,CAAC,CAAC;EACJ;;EAEAP,SAAS;IACP,IAAI,CAACJ,GAAG,CAACgB,gBAAgB,EAAE,CAC1BV,SAAS,CAAEC,IAAc,IAAI;MAC5B,MAAMU,WAAW,GAAG,IAAIC,GAAG,EAAU;MAErC;MACA,IAAI,CAACC,MAAM,GAAGZ,IAAI,CACjBE,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACU,MAAM,KAAK,SAAS,CAAC,CACzCX,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,SAAS,CAAC,CACvCF,MAAM,CAACC,IAAI,IAAG;QACb;QACA,IAAI,CAACO,WAAW,CAACI,GAAG,CAACX,IAAI,CAACY,IAAI,CAAC,EAAE;UAC/B;UACAL,WAAW,CAACM,GAAG,CAACb,IAAI,CAACY,IAAI,CAAC;UAC1B,OAAO,IAAI;;QAEb,OAAO,KAAK;MACd,CAAC,CAAC;MAEFV,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAACW,IAAI,CAACC,SAAS,CAAC,IAAI,CAACN,MAAM,CAAC,CAAE;IAEjE,CAAC,CAAC;EACJ;EACAd,SAAS;IACP,IAAI,CAACL,GAAG,CAACgB,gBAAgB,EAAE,CAC1BV,SAAS,CAAEC,IAAa,IAAI;MAC3B;MACA,IAAI,CAACmB,MAAM,GAAGnB,IAAI,CAACE,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,SAAS,CAAC;MAC1DC,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAAC,IAAI,CAACa,MAAM,CAAC;IAE5C,CAAC,CAAC;EACJ;CACD;AAlEY7B,aAAa,eALzBD,SAAS,CAAC;EACT+B,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,GACWhC,aAAa,CAkEzB;SAlEYA,aAAa","names":["Component","HomeComponent","constructor","userService","att","ngOnInit","getStudent","getProf","getattEmp","getattStu","subscribe","data","students","filter","user","role","console","log","getTeacher","Teachers","getAllAttendance","uniqueNames","Set","attemp","status","has","name","add","JSON","stringify","attstu","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Mehdi\\Desktop\\Angular\\my-dashboard\\src\\app\\pages\\home\\home.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UserServiceService } from 'src/app/user-service.service';\nimport { IUser, IdUser } from '../user';\nimport { AttendanceService } from 'src/app/attendance.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  \n  students: IUser[] = [];\n  Teachers: any[] = [];\n  attemp:IdUser[]=[];\n  attstu:IUser[]=[];\n  constructor(private userService:UserServiceService,private att:AttendanceService){}\n  ngOnInit(): void {\n    this.getStudent();\n    this.getProf();\n    this.getattEmp();\n    this.getattStu();\n  }\n  getStudent(){\n    this.userService.getStudent()\n  .subscribe((data: IUser[]) => {\n    // Filter users by role 'student'\n    this.students = data.filter(user => user.role === 'Student');\n    console.log(this.students);\n    \n  });\n  }\n\n  getProf(){\n    this.userService.getTeacher()\n    .subscribe((data: IUser[]) => {\n      // Filter users by role 'student'\n      this.Teachers = data.filter(user => user.role !== 'Student');\n      //console.log(\"all teachers\"+JSON.stringify(this.Teachers));\n      \n\n    });\n  }\n\n  getattEmp(){\n    this.att.getAllAttendance()\n    .subscribe((data: IdUser[]) => {\n      const uniqueNames = new Set<string>();\n      \n      // Filter users by role 'student'\n      this.attemp = data\n      .filter(user => user.status === 'Present')\n      .filter(user => user.role !== 'Student')\n      .filter(user => {\n        // Check if the name is not already in the Set\n        if (!uniqueNames.has(user.name)) {\n          // Add the name to the Set\n          uniqueNames.add(user.name);\n          return true;\n        }\n        return false;\n      });\n      \n      console.log(\"attendance employee\"+JSON.stringify(this.attemp) );\n      \n    });\n  }\n  getattStu(){\n    this.att.getAllAttendance()\n    .subscribe((data: IUser[]) => {\n      // Filter users by role 'student'\n      this.attstu = data.filter(user => user.role === 'Student');\n      console.log(\"student absence\"+this.attstu);\n      \n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}