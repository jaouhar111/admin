{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LoadingService {\n  constructor(http) {\n    this.http = http;\n    this.url = \"http://localhost:9000/api/matiere\";\n  }\n  loadExternalScript() {\n    const script = document.createElement('script');\n    script.src = 'https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.8.1/flowbite.min.js';\n    script.async = true;\n    script.onload = () => {\n      // Script has loaded, you can now use its functionality\n      // Initialize any required functionality from the script\n    };\n    document.head.appendChild(script);\n  }\n  removeExternalScript() {\n    // If needed, remove the script element from the DOM when the component is destroyed\n    const script = document.querySelector('[src=\"https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.8.1/flowbite.min.js\"]');\n    if (script) {\n      script.remove();\n    }\n  }\n  ajClasse(name, prof) {\n    return this.http.post(this.url, {\n      name,\n      prof\n    }).pipe(catchError(this.handleError));\n  }\n}\n_class = LoadingService;\n_class.ɵfac = function LoadingService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAOA,OAAM,MAAOA,cAAc;EAEzBC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IADP,QAAG,GAAC,mCAAmC;EACjB;EAEvCC,kBAAkB;IAChB,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/CF,MAAM,CAACG,GAAG,GAAG,uEAAuE;IACpFH,MAAM,CAACI,KAAK,GAAG,IAAI;IACnBJ,MAAM,CAACK,MAAM,GAAG,MAAK;MACnB;MACA;IAAA,CACD;IACDJ,QAAQ,CAACK,IAAI,CAACC,WAAW,CAACP,MAAM,CAAC;EACnC;EACAQ,oBAAoB;IAClB;IACA,MAAMR,MAAM,GAAGC,QAAQ,CAACQ,aAAa,CAAC,+EAA+E,CAAC;IACtH,IAAIT,MAAM,EAAE;MACVA,MAAM,CAACU,MAAM,EAAE;;EAEnB;EACOC,QAAQ,CAACC,IAAY,EAAEC,IAAW;IACvC,OAAO,IAAI,CAACf,IAAI,CAACgB,IAAI,CAAC,IAAI,CAACC,GAAG,EAAC;MAC7BH,IAAI;MAACC;KACN,CAAC,CAACG,IAAI,CACLC,UAAU,CAAC,IAAI,CAACC,WAAW,CAAC,CAC7B;EACH;;SA3BWtB,cAAc;;mBAAdA,MAAc;AAAA;;SAAdA,MAAc;EAAAuB,SAAdvB,MAAc;EAAAwB,YAFb;AAAM","names":["LoadingService","constructor","http","loadExternalScript","script","document","createElement","src","async","onload","head","appendChild","removeExternalScript","querySelector","remove","ajClasse","name","prof","post","url","pipe","catchError","handleError","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Mehdi\\Desktop\\Angular\\my-dashboard\\src\\app\\loading.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n  private readonly url=\"http://localhost:9000/api/matiere\";\n  constructor(private http:HttpClient) { }\n\n  loadExternalScript() {\n    const script = document.createElement('script');\n    script.src = 'https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.8.1/flowbite.min.js';\n    script.async = true;\n    script.onload = () => {\n      // Script has loaded, you can now use its functionality\n      // Initialize any required functionality from the script\n    };\n    document.head.appendChild(script);\n  }\n  removeExternalScript() {\n    // If needed, remove the script element from the DOM when the component is destroyed\n    const script = document.querySelector('[src=\"https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.8.1/flowbite.min.js\"]');\n    if (script) {\n      script.remove();\n    }\n  }\n  public ajClasse(name: String, prof:String):Observable<any>{\n    return this.http.post(this.url,{\n      name,prof\n    }).pipe(\n      catchError(this.handleError)\n    )\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}