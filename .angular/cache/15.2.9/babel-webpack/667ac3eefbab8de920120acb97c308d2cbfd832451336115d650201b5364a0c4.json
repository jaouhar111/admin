{"ast":null,"code":"var _class;\nimport { Chart, registerables } from 'node_modules/chart.js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/classe.service\";\nChart.register(...registerables);\nexport class ClasseChartsComponent {\n  constructor(Cla) {\n    this.Cla = Cla;\n    this.classData = []; // Array to store class data\n    this.classNames = []; // Array to store class names\n    this.studentCounts = []; // Array to store student counts\n  }\n\n  ngOnInit() {\n    this.Cla.getClasse().subscribe(data => {\n      this.classData = data;\n      // Extract class names and student counts\n      this.classNames = this.classData.map(classInfo => classInfo.name);\n      this.studentCounts = this.classData.map(classInfo => classInfo.students.length);\n      // Create and update the chart\n      this.renderChart();\n    });\n  }\n  renderChart() {\n    const mychart = new Chart(\"barchart\", {\n      type: 'bar',\n      options: {\n        indexAxis: 'y',\n        grid: {\n          offset: true\n        }\n      },\n      data: {\n        labels: this.classNames,\n        datasets: [{\n          label: 'Etudients',\n          data: this.studentCounts,\n          backgroundColor: ['rgba(255, 99, 132, 0.2)'],\n          borderColor: ['rgb(255, 99, 132)'],\n          borderWidth: 1\n        }]\n      }\n    });\n  }\n}\n_class = ClasseChartsComponent;\n_class.ɵfac = function ClasseChartsComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ClasseService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-classe-charts\"]],\n  decls: 1,\n  vars: 0,\n  consts: [[\"id\", \"barchart\"]],\n  template: function ClasseChartsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"canvas\", 0);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjbGFzc2UtY2hhcnRzLmNvbXBvbmVudC5jc3MifQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvY2xhc3NlLWNoYXJ0cy9jbGFzc2UtY2hhcnRzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLDRLQUE0SyIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";AACA,SAASA,KAAK,EAAEC,aAAa,QAAQ,uBAAuB;;;AAE5DD,KAAK,CAACE,QAAQ,CAAC,GAAGD,aAAa,CAAC;AAMhC,OAAM,MAAOE,qBAAqB;EAIhCC,YAAoBC,GAAiB;IAAjB,QAAG,GAAHA,GAAG;IAHvB,cAAS,GAAU,EAAE,CAAC,CAAC;IACvB,eAAU,GAAa,EAAE,CAAC,CAAC;IAC3B,kBAAa,GAAa,EAAE,CAAC,CAAC;EACS;;EACvCC,QAAQ;IACN,IAAI,CAACD,GAAG,CAACE,SAAS,EAAE,CACnBC,SAAS,CAACC,IAAI,IAAG;MAChB,IAAI,CAACC,SAAS,GAAGD,IAAI;MAErB;MACA,IAAI,CAACE,UAAU,GAAG,IAAI,CAACD,SAAS,CAACE,GAAG,CAACC,SAAS,IAAIA,SAAS,CAACC,IAAI,CAAC;MACjE,IAAI,CAACC,aAAa,GAAG,IAAI,CAACL,SAAS,CAACE,GAAG,CAACC,SAAS,IAAIA,SAAS,CAACG,QAAQ,CAACC,MAAM,CAAC;MAE/E;MACA,IAAI,CAACC,WAAW,EAAE;IACpB,CAAC,CAAC;EACJ;EACFA,WAAW;IACX,MAAMC,OAAO,GAAG,IAAInB,KAAK,CAAC,UAAU,EAAC;MACrCoB,IAAI,EAAC,KAAK;MACVC,OAAO,EAAE;QACPC,SAAS,EAAE,GAAG;QACdC,IAAI,EAAE;UACJC,MAAM,EAAE;;OAEX;MACAf,IAAI,EAAG;QACNgB,MAAM,EAAE,IAAI,CAACd,UAAU;QACvBe,QAAQ,EAAE,CAAC;UACTC,KAAK,EAAE,WAAW;UAClBlB,IAAI,EAAE,IAAI,CAACM,aAAa;UACxBa,eAAe,EAAE,CACf,yBAAyB,CAE1B;UACDC,WAAW,EAAE,CACX,mBAAmB,CAEpB;UACDC,WAAW,EAAE;SACd;;KAEF,CAAC;EAEF;;SA7Ca3B,qBAAqB;;mBAArBA,MAAqB;AAAA;;QAArBA,MAAqB;EAAA4B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCR9BC,4BAA+B","names":["Chart","registerables","register","ClasseChartsComponent","constructor","Cla","ngOnInit","getClasse","subscribe","data","classData","classNames","map","classInfo","name","studentCounts","students","length","renderChart","mychart","type","options","indexAxis","grid","offset","labels","datasets","label","backgroundColor","borderColor","borderWidth","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Mehdi\\Desktop\\Angular\\my-dashboard\\src\\app\\pages\\classe-charts\\classe-charts.component.ts","C:\\Users\\Mehdi\\Desktop\\Angular\\my-dashboard\\src\\app\\pages\\classe-charts\\classe-charts.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Chart, registerables } from 'node_modules/chart.js';\nimport { ClasseService } from 'src/app/classe.service';\nChart.register(...registerables);\n@Component({\n  selector: 'app-classe-charts',\n  templateUrl: './classe-charts.component.html',\n  styleUrls: ['./classe-charts.component.css']\n})\nexport class ClasseChartsComponent implements OnInit{\n  classData: any[] = []; // Array to store class data\n  classNames: string[] = []; // Array to store class names\n  studentCounts: number[] = []; // Array to store student counts\n  constructor(private Cla:ClasseService){}\n  ngOnInit(): void {\n    this.Cla.getClasse()\n    .subscribe(data => {\n      this.classData = data;\n\n      // Extract class names and student counts\n      this.classNames = this.classData.map(classInfo => classInfo.name);\n      this.studentCounts = this.classData.map(classInfo => classInfo.students.length);\n\n      // Create and update the chart\n      this.renderChart();\n    });\n  }\nrenderChart(){\nconst mychart = new Chart(\"barchart\",{\ntype:'bar',\noptions: {\n  indexAxis: 'y',\n  grid: {\n    offset: true\n  }\n},\n data : {\n  labels: this.classNames,\n  datasets: [{\n    label: 'Etudients',\n    data: this.studentCounts,\n    backgroundColor: [\n      'rgba(255, 99, 132, 0.2)',\n      \n    ],\n    borderColor: [\n      'rgb(255, 99, 132)',\n      \n    ],\n    borderWidth: 1\n  }]\n}\n})\n\n}\n}\n","\n    <canvas id=\"barchart\"></canvas>\n\n   \n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}