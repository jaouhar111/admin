{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet HomeComponent = class HomeComponent {\n  constructor(userService, att) {\n    this.userService = userService;\n    this.att = att;\n    this.absentPercentage = 0;\n    this.students = [];\n    this.Teachers = [];\n    this.attemp = [];\n    this.attstu = [];\n  }\n  ngOnInit() {\n    this.getStudent();\n    this.getProf();\n    this.getattEmp();\n    this.getattStu();\n    this.calculateAbsentPercentage();\n  }\n  getStudent() {\n    this.userService.getStudent().subscribe(data => {\n      // Filter users by role 'student'\n      this.students = data.filter(user => user.role === 'Student');\n    });\n  }\n  getProf() {\n    this.userService.getTeacher().subscribe(data => {\n      // Filter users by role 'student'\n      this.Teachers = data.filter(user => user.role !== 'Student');\n      //console.log(\"all teachers\"+JSON.stringify(this.Teachers));\n    });\n  }\n\n  getattEmp() {\n    const currentDate = new Date(); // Get the current date\n    this.att.getAllAttendance().subscribe(data => {\n      const uniqueNames = new Set();\n      // Filter users by status 'Present' and date matching the current date\n      this.attemp = data.filter(user => user.status === 'Present').filter(user => user.iduser.role !== 'Student').filter(user => {\n        // Convert the date from the data to a JavaScript Date object\n        const attendanceDate = new Date(user.datenow);\n        // Check if the date matches the current date\n        if (attendanceDate.getDate() === currentDate.getDate() && attendanceDate.getMonth() === currentDate.getMonth() && attendanceDate.getFullYear() === currentDate.getFullYear()) {\n          // Check if the name is not already in the Set\n          if (!uniqueNames.has(user.iduser.name)) {\n            // Add the name to the Set\n            uniqueNames.add(user.iduser.name);\n            return true;\n          }\n        }\n        return false;\n      });\n      // console.log(\"attendance employee\" + JSON.stringify(this.attemp));\n    });\n  }\n\n  getattStu() {\n    const currentDate = new Date(); // Get the current date\n    this.att.getAllAttendance().subscribe(data => {\n      const uniqueNames = new Set();\n      // Filter users by status 'Absent', role 'Student', and date matching the current date\n      this.attstu = data.filter(user => user.status === 'Absent').filter(user => user.iduser.role === 'Student').filter(user => {\n        // Convert the date from the data to a JavaScript Date object\n        const attendanceDate = new Date(user.datenow);\n        // Check if the date matches the current date\n        if (attendanceDate.getDate() === currentDate.getDate() && attendanceDate.getMonth() === currentDate.getMonth() && attendanceDate.getFullYear() === currentDate.getFullYear()) {\n          // Check if the name is not already in the Set\n          if (!uniqueNames.has(user.iduser.name)) {\n            // Add the name to the Set\n            uniqueNames.add(user.iduser.name);\n            return true;\n          }\n        }\n        return false;\n      });\n    });\n  }\n  calculateAbsentPercentage() {\n    console.log(\"Total students:\", this.students.length);\n    console.log(\"Absent students:\", this.attstu.length);\n    if (this.students.length > 0) {\n      this.absentPercentage = this.attstu.length / this.students.length * 100;\n    } else {\n      this.absentPercentage = 0; // Handle cases where there are no students\n    }\n\n    console.log(\"Absent percentage:\", this.absentPercentage);\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAW1C,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAMxBC,YAAoBC,WAA8B,EAASC,GAAqB;IAA5D,gBAAW,GAAXD,WAAW;IAA4B,QAAG,GAAHC,GAAG;IAL9D,qBAAgB,GAAW,CAAC;IAC5B,aAAQ,GAAY,EAAE;IACtB,aAAQ,GAAU,EAAE;IACpB,WAAM,GAAe,EAAE;IACvB,WAAM,GAAe,EAAE;EAC2D;EAClFC,QAAQ;IAEN,IAAI,CAACC,UAAU,EAAE;IACjB,IAAI,CAACC,OAAO,EAAE;IACd,IAAI,CAACC,SAAS,EAAE;IAChB,IAAI,CAACC,SAAS,EAAE;IAChB,IAAI,CAACC,yBAAyB,EAAE;EAGlC;EACAJ,UAAU;IACR,IAAI,CAACH,WAAW,CAACG,UAAU,EAAE,CAC9BK,SAAS,CAAEC,IAAa,IAAI;MAC3B;MACA,IAAI,CAACC,QAAQ,GAAGD,IAAI,CAACE,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,SAAS,CAAC;IAE9D,CAAC,CAAC;EACF;EAEAT,OAAO;IACL,IAAI,CAACJ,WAAW,CAACc,UAAU,EAAE,CAC5BN,SAAS,CAAEC,IAAa,IAAI;MAC3B;MACA,IAAI,CAACM,QAAQ,GAAGN,IAAI,CAACE,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,SAAS,CAAC;MAC5D;IAGF,CAAC,CAAC;EACJ;;EAEAR,SAAS;IACP,MAAMW,WAAW,GAAG,IAAIC,IAAI,EAAE,CAAC,CAAC;IAEhC,IAAI,CAAChB,GAAG,CAACiB,gBAAgB,EAAE,CACxBV,SAAS,CAAEC,IAAmB,IAAI;MACjC,MAAMU,WAAW,GAAG,IAAIC,GAAG,EAAU;MAErC;MACA,IAAI,CAACC,MAAM,GAAGZ,IAAI,CACfE,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACU,MAAM,KAAK,SAAS,CAAC,CACzCX,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACW,MAAM,CAACV,IAAI,KAAK,SAAS,CAAC,CAC9CF,MAAM,CAACC,IAAI,IAAG;QACb;QACA,MAAMY,cAAc,GAAG,IAAIP,IAAI,CAACL,IAAI,CAACa,OAAO,CAAC;QAE7C;QACA,IACED,cAAc,CAACE,OAAO,EAAE,KAAKV,WAAW,CAACU,OAAO,EAAE,IAClDF,cAAc,CAACG,QAAQ,EAAE,KAAKX,WAAW,CAACW,QAAQ,EAAE,IACpDH,cAAc,CAACI,WAAW,EAAE,KAAKZ,WAAW,CAACY,WAAW,EAAE,EAC1D;UACA;UACA,IAAI,CAACT,WAAW,CAACU,GAAG,CAACjB,IAAI,CAACW,MAAM,CAACO,IAAI,CAAC,EAAE;YACtC;YACAX,WAAW,CAACY,GAAG,CAACnB,IAAI,CAACW,MAAM,CAACO,IAAI,CAAC;YACjC,OAAO,IAAI;;;QAGf,OAAO,KAAK;MACd,CAAC,CAAC;MAEJ;IACF,CAAC,CAAC;EACN;;EAEAxB,SAAS;IACP,MAAMU,WAAW,GAAG,IAAIC,IAAI,EAAE,CAAC,CAAC;IAEhC,IAAI,CAAChB,GAAG,CAACiB,gBAAgB,EAAE,CACxBV,SAAS,CAAEC,IAAmB,IAAI;MACjC,MAAMU,WAAW,GAAG,IAAIC,GAAG,EAAU;MAErC;MACA,IAAI,CAACY,MAAM,GAAGvB,IAAI,CACfE,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACU,MAAM,KAAK,QAAQ,CAAC,CACxCX,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACW,MAAM,CAACV,IAAI,KAAK,SAAS,CAAC,CAC9CF,MAAM,CAACC,IAAI,IAAG;QACb;QACA,MAAMY,cAAc,GAAG,IAAIP,IAAI,CAACL,IAAI,CAACa,OAAO,CAAC;QAE7C;QACA,IACED,cAAc,CAACE,OAAO,EAAE,KAAKV,WAAW,CAACU,OAAO,EAAE,IAClDF,cAAc,CAACG,QAAQ,EAAE,KAAKX,WAAW,CAACW,QAAQ,EAAE,IACpDH,cAAc,CAACI,WAAW,EAAE,KAAKZ,WAAW,CAACY,WAAW,EAAE,EAC1D;UACA;UACA,IAAI,CAACT,WAAW,CAACU,GAAG,CAACjB,IAAI,CAACW,MAAM,CAACO,IAAI,CAAC,EAAE;YACtC;YACAX,WAAW,CAACY,GAAG,CAACnB,IAAI,CAACW,MAAM,CAACO,IAAI,CAAC;YACjC,OAAO,IAAI;;;QAGf,OAAO,KAAK;MACd,CAAC,CAAC;IAGN,CAAC,CAAC;EACN;EAGAvB,yBAAyB;IACvB0B,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAACxB,QAAQ,CAACyB,MAAM,CAAC;IACpDF,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAACF,MAAM,CAACG,MAAM,CAAC;IAEnD,IAAI,IAAI,CAACzB,QAAQ,CAACyB,MAAM,GAAG,CAAC,EAAE;MAC5B,IAAI,CAACC,gBAAgB,GAAI,IAAI,CAACJ,MAAM,CAACG,MAAM,GAAG,IAAI,CAACzB,QAAQ,CAACyB,MAAM,GAAI,GAAG;KAC1E,MAAM;MACL,IAAI,CAACC,gBAAgB,GAAG,CAAC,CAAC,CAAC;;;IAG7BH,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAACE,gBAAgB,CAAC;EAC1D;CACD;AAxHYtC,aAAa,eALzBD,SAAS,CAAC;EACTwC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,GACWzC,aAAa,CAwHzB;SAxHYA,aAAa","names":["Component","HomeComponent","constructor","userService","att","ngOnInit","getStudent","getProf","getattEmp","getattStu","calculateAbsentPercentage","subscribe","data","students","filter","user","role","getTeacher","Teachers","currentDate","Date","getAllAttendance","uniqueNames","Set","attemp","status","iduser","attendanceDate","datenow","getDate","getMonth","getFullYear","has","name","add","attstu","console","log","length","absentPercentage","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Mehdi\\Desktop\\Angular\\my-dashboard\\src\\app\\pages\\home\\home.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UserServiceService } from 'src/app/user-service.service';\nimport { IUser, IAttendance } from '../user';\nimport { AttendanceService } from 'src/app/attendance.service';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  absentPercentage: number = 0;\n  students: IUser[] = [];\n  Teachers: any[] = [];\n  attemp:IAttendance[]=[];\n  attstu:IAttendance[]=[];\n  constructor(private userService:UserServiceService,private att:AttendanceService){}\n  ngOnInit(): void {\n    \n    this.getStudent();\n    this.getProf();\n    this.getattEmp();\n    this.getattStu();\n    this.calculateAbsentPercentage();\n     \n    \n  }\n  getStudent(){\n    this.userService.getStudent()\n  .subscribe((data: IUser[]) => {\n    // Filter users by role 'student'\n    this.students = data.filter(user => user.role === 'Student');\n    \n  });\n  }\n\n  getProf(){\n    this.userService.getTeacher()\n    .subscribe((data: IUser[]) => {\n      // Filter users by role 'student'\n      this.Teachers = data.filter(user => user.role !== 'Student');\n      //console.log(\"all teachers\"+JSON.stringify(this.Teachers));\n      \n\n    });\n  }\n\n  getattEmp() {\n    const currentDate = new Date(); // Get the current date\n  \n    this.att.getAllAttendance()\n      .subscribe((data: IAttendance[]) => {\n        const uniqueNames = new Set<string>();\n  \n        // Filter users by status 'Present' and date matching the current date\n        this.attemp = data\n          .filter(user => user.status === 'Present')\n          .filter(user => user.iduser.role !== 'Student')\n          .filter(user => {\n            // Convert the date from the data to a JavaScript Date object\n            const attendanceDate = new Date(user.datenow);\n  \n            // Check if the date matches the current date\n            if (\n              attendanceDate.getDate() === currentDate.getDate() &&\n              attendanceDate.getMonth() === currentDate.getMonth() &&\n              attendanceDate.getFullYear() === currentDate.getFullYear()\n            ) {\n              // Check if the name is not already in the Set\n              if (!uniqueNames.has(user.iduser.name)) {\n                // Add the name to the Set\n                uniqueNames.add(user.iduser.name);\n                return true;\n              }\n            }\n            return false;\n          });\n  \n        // console.log(\"attendance employee\" + JSON.stringify(this.attemp));\n      });\n  }\n  \n  getattStu() {\n    const currentDate = new Date(); // Get the current date\n  \n    this.att.getAllAttendance()\n      .subscribe((data: IAttendance[]) => {\n        const uniqueNames = new Set<string>();\n  \n        // Filter users by status 'Absent', role 'Student', and date matching the current date\n        this.attstu = data\n          .filter(user => user.status === 'Absent')\n          .filter(user => user.iduser.role === 'Student')\n          .filter(user => {\n            // Convert the date from the data to a JavaScript Date object\n            const attendanceDate = new Date(user.datenow);\n  \n            // Check if the date matches the current date\n            if (\n              attendanceDate.getDate() === currentDate.getDate() &&\n              attendanceDate.getMonth() === currentDate.getMonth() &&\n              attendanceDate.getFullYear() === currentDate.getFullYear()\n            ) {\n              // Check if the name is not already in the Set\n              if (!uniqueNames.has(user.iduser.name)) {\n                // Add the name to the Set\n                uniqueNames.add(user.iduser.name);\n                return true;\n              }\n            }\n            return false;\n          });\n  \n        \n      });\n  }\n  \n\n  calculateAbsentPercentage() {\n    console.log(\"Total students:\", this.students.length);\n    console.log(\"Absent students:\", this.attstu.length);\n  \n    if (this.students.length > 0) {\n      this.absentPercentage = (this.attstu.length / this.students.length) * 100;\n    } else {\n      this.absentPercentage = 0; // Handle cases where there are no students\n    }\n  \n    console.log(\"Absent percentage:\", this.absentPercentage);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}