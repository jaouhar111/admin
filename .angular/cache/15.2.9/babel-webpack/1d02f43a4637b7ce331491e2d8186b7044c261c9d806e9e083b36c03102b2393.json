{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ProfileComponent = class ProfileComponent {\n  ngOnInit() {\n    const id = this.route.snapshot.paramMap.get(\"id\");\n    this.user.getonestudent(id).subscribe({\n      next: student => {\n        this.data = student;\n      }\n    });\n  }\n  constructor(route, user) {\n    this.route = route;\n    this.user = user;\n    this.data = [];\n  }\n};\nProfileComponent = __decorate([Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})], ProfileComponent);\nexport { ProfileComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAC3BC,QAAQ;IACN,MAAMC,EAAE,GAAC,IAAI,CAACC,KAAK,CAACC,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAC/C,IAAI,CAACC,IAAI,CAACC,aAAa,CAACN,EAAE,CAAC,CAACO,SAAS,CAAC;MAIpCC,IAAI,EAACC,OAAO,IAAG;QAAG,IAAI,CAACC,IAAI,GAAGD,OAAO;MAAC;KAEtC,CAAC;EAGL;EAEAE,YACUV,KAAoB,EACpBI,IAAuB;IADvB,UAAK,GAALJ,KAAK;IACL,SAAI,GAAJI,IAAI;IAHd,SAAI,GAAQ,EAAE;EAIV;CACL;AAlBYP,gBAAgB,eAL5BD,SAAS,CAAC;EACTe,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,GACWhB,gBAAgB,CAkB5B;SAlBYA,gBAAgB","names":["Component","ProfileComponent","ngOnInit","id","route","snapshot","paramMap","get","user","getonestudent","subscribe","next","student","data","constructor","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Mehdi\\Desktop\\Angular\\my-dashboard\\src\\app\\pages\\profile\\profile.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserServiceService } from 'src/app/user-service.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  ngOnInit(): void {\n    const id=this.route.snapshot.paramMap.get(\"id\")\n    this.user.getonestudent(id).subscribe({\n   \n   \n    \n      next:student => { this.data = student }\n      \n     })\n     \n   \n  }\n  data: any = [];\n  constructor(\n    private route:ActivatedRoute,\n    private user:UserServiceService\n    ){}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}