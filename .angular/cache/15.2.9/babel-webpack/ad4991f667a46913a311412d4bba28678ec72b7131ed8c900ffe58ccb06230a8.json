{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AdmissionComponent = class AdmissionComponent {\n  constructor(userService, router, Cla) {\n    this.userService = userService;\n    this.router = router;\n    this.Cla = Cla;\n    this.Classes = [];\n    this.classeroom = \"\";\n    this.name = '';\n    this.register = '';\n    this.genre = '';\n    this.photo = '';\n    this.dateN = new Date();\n    this.adresse = '';\n    this.role = 'Student';\n    this.father = '';\n    this.profession = '';\n    this.nationalid = '';\n    this.education = '';\n    this.mobile = '';\n    this.email = '';\n    this.student = [];\n  }\n  ngOnInit() {\n    this.Cla.getClasse().subscribe(classe => {\n      this.Classes = classe;\n      console.log(this.Classes);\n    });\n  }\n  ajetudient() {\n    this.userService.ajStudent(this.name, this.register, this.genre, this.photo, this.dateN, this.adresse, this.role, this.father, this.profession, this.nationalid, this.education, this.mobile, this.email).subscribe(response => {\n      const studentId = response.body.userId; // Access the generated student ID from the response\n      console.log('Student ID:', studentId);\n      // Now you have the generated student ID\n      this.Cla.updateClasseroom(this.classeroom, studentId).subscribe(updatedClassroom => {\n        console.log('Classroom updated successfully:', updatedClassroom);\n      }, error => {\n        console.error('Error:', error);\n        // Handle error\n      });\n    }, error => {\n      console.error('Error:', error);\n      // Handle error\n    });\n\n    this.router.navigate(['/student']);\n  }\n};\nAdmissionComponent = __decorate([Component({\n  selector: 'app-admission',\n  templateUrl: './admission.component.html',\n  styleUrls: ['./admission.component.css']\n})], AdmissionComponent);\nexport { AdmissionComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAW1C,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAkB7BC,YAAoBC,WAA8B,EAASC,MAAa,EAASC,GAAiB;IAA9E,gBAAW,GAAXF,WAAW;IAA4B,WAAM,GAANC,MAAM;IAAgB,QAAG,GAAHC,GAAG;IAjBpF,YAAO,GAAU,EAAE;IACnB,eAAU,GAAQ,EAAE;IACpB,SAAI,GAAW,EAAE;IACjB,aAAQ,GAAS,EAAE;IACnB,UAAK,GAAU,EAAE;IACjB,UAAK,GAAS,EAAE;IAChB,UAAK,GAAQ,IAAIC,IAAI,EAAE;IACvB,YAAO,GAAS,EAAE;IAClB,SAAI,GAAS,SAAS;IACtB,WAAM,GAAS,EAAE;IACjB,eAAU,GAAS,EAAE;IACrB,eAAU,GAAS,EAAE;IACrB,cAAS,GAAS,EAAE;IACpB,WAAM,GAAS,EAAE;IACjB,UAAK,GAAS,EAAE;IAEhB,YAAO,GAAM,EAAE;EAGf;EACAC,QAAQ;IACN,IAAI,CAACF,GAAG,CAACG,SAAS,EAAE,CACnBC,SAAS,CAACC,MAAM,IAAG;MAClB,IAAI,CAACC,OAAO,GAAGD,MAAM;MACrBE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,OAAO,CAAC;IAE3B,CAAC,CAAC;EACJ;EACAG,UAAU;IAGV,IAAI,CAACX,WAAW,CAACY,SAAS,CAAC,IAAI,CAACC,IAAI,EAAC,IAAI,CAACC,QAAQ,EAAC,IAAI,CAACC,KAAK,EAAC,IAAI,CAACC,KAAK,EAAC,IAAI,CAACC,KAAK,EAAC,IAAI,CAACC,OAAO,EAAC,IAAI,CAACC,IAAI,EAAC,IAAI,CAACC,MAAM,EAAC,IAAI,CAACC,UAAU,EAAC,IAAI,CAACC,UAAU,EAAC,IAAI,CAACC,SAAS,EAAC,IAAI,CAACC,MAAM,EAAC,IAAI,CAACC,KAAK,CAAC,CAACnB,SAAS,CACpMoB,QAAQ,IAAI;MACX,MAAMC,SAAS,GAAGD,QAAQ,CAACE,IAAI,CAACC,MAAM,EAAC;MACvCpB,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEiB,SAAS,CAAC;MACrC;MAEA,IAAI,CAACzB,GAAG,CAAC4B,gBAAgB,CAAC,IAAI,CAACC,UAAU,EAAEJ,SAAS,CAAC,CAACrB,SAAS,CAC5D0B,gBAAgB,IAAI;QACnBvB,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEsB,gBAAgB,CAAC;MAClE,CAAC,EACAC,KAAK,IAAI;QACRxB,OAAO,CAACwB,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAC9B;MACF,CAAC,CACF;IACH,CAAC,EACAA,KAAK,IAAI;MACRxB,OAAO,CAACwB,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9B;IACF,CAAC,CACF;;IACC,IAAI,CAAChC,MAAM,CAACiC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;EACpC;CAED;AAxDYpC,kBAAkB,eAL9BD,SAAS,CAAC;EACTsC,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,GACWvC,kBAAkB,CAwD9B;SAxDYA,kBAAkB","names":["Component","AdmissionComponent","constructor","userService","router","Cla","Date","ngOnInit","getClasse","subscribe","classe","Classes","console","log","ajetudient","ajStudent","name","register","genre","photo","dateN","adresse","role","father","profession","nationalid","education","mobile","email","response","studentId","body","userId","updateClasseroom","classeroom","updatedClassroom","error","navigate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Mehdi\\Desktop\\Angular\\my-dashboard\\src\\app\\pages\\admission\\admission.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UserServiceService } from 'src/app/user-service.service';\nimport { IUser } from '../user';\nimport { Router } from '@angular/router';\nimport { ClasseService } from 'src/app/classe.service';\n\n@Component({\n  selector: 'app-admission',\n  templateUrl: './admission.component.html',\n  styleUrls: ['./admission.component.css']\n})\nexport class AdmissionComponent implements OnInit {\n  Classes: any[] = [];\n  classeroom:String=\"\"\n  name: String = '';\n  register:String ='';\n  genre :String ='';\n  photo:String ='';\n  dateN: Date= new Date();\n  adresse:String ='';\n  role:String ='Student';\n  father:String ='';\n  profession:String ='';\n  nationalid:String ='';\n  education:String ='';\n  mobile:String ='';\n  email:String ='';\n  \n  student:any= [];\n  constructor(private userService:UserServiceService,private router:Router,private Cla:ClasseService){\n\n  }  \n  ngOnInit(): void {\n    this.Cla.getClasse()\n    .subscribe(classe =>{\n      this.Classes = classe\n      console.log(this.Classes);\n      \n    });\n  }\n  ajetudient(){\n    \n  \n  this.userService.ajStudent(this.name,this.register,this.genre,this.photo,this.dateN,this.adresse,this.role,this.father,this.profession,this.nationalid,this.education,this.mobile,this.email).subscribe(\n    (response) => {\n      const studentId = response.body.userId // Access the generated student ID from the response\n      console.log('Student ID:', studentId);\n      // Now you have the generated student ID\n      \n      this.Cla.updateClasseroom(this.classeroom, studentId).subscribe(\n        (updatedClassroom) => {\n          console.log('Classroom updated successfully:', updatedClassroom);\n        },\n        (error) => {\n          console.error('Error:', error);\n          // Handle error\n        }\n      );\n    },\n    (error) => {\n      console.error('Error:', error);\n      // Handle error\n    }\n  );\n    this.router.navigate(['/student']);\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}