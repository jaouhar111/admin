{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nlet LoadingService = class LoadingService {\n  constructor() {\n    this.url = \"http://localhost:9000/api/matiere\";\n  }\n};\nLoadingService = __decorate([Injectable({\n  providedIn: 'root'\n})], LoadingService);\nexport { LoadingService };\nhttp => {};\n{}\nloadExternalScript();\n{\n  const script = document.createElement('script');\n  script.src = 'https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.8.1/flowbite.min.js';\n  script.async = true;\n  script.onload = () => {\n    // Script has loaded, you can now use its functionality\n    // Initialize any required functionality from the script\n  };\n  document.head.appendChild(script);\n}\nremoveExternalScript();\n{\n  // If needed, remove the script element from the DOM when the component is destroyed\n  const script = document.querySelector('[src=\"https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.8.1/flowbite.min.js\"]');\n  if (script) {\n    script.remove();\n  }\n}\najClasse(name, String, prof, String);\nObservable < any > {\n  return: this.http.post(this.url, {\n    name,\n    prof\n  }).pipe(catchError(this.handleError))\n};","map":{"version":3,"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,MAAM;AAK1B,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAApBC;IACY,QAAG,GAAC,mCAAmC;EACjC;CAAA;AAFZD,cAAc,eAH1BF,UAAU,CAAC;EACVI,UAAU,EAAE;CACb,CAAC,GACWF,cAAc,CAEF;SAFZA,cAAc;AAEOG,IAAe,IAAC,CAAG,CAAC;AAAE;AAEtDC,kBAAkB,EAAE;AAAC;EACnB,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;EAC/CF,MAAM,CAACG,GAAG,GAAG,uEAAuE;EACpFH,MAAM,CAACI,KAAK,GAAG,IAAI;EACnBJ,MAAM,CAACK,MAAM,GAAG,MAAK;IACnB;IACA;EAAA,CACD;EACDJ,QAAQ,CAACK,IAAI,CAACC,WAAW,CAACP,MAAM,CAAC;;AAEnCQ,oBAAoB,EAAE;AAAC;EACrB;EACA,MAAMR,MAAM,GAAGC,QAAQ,CAACQ,aAAa,CAAC,+EAA+E,CAAC;EACtH,IAAIT,MAAM,EAAE;IACVA,MAAM,CAACU,MAAM,EAAE;;;AAGZC,QAAQ,CAACC,IAAI,EAAEC,MAAM,EAAEC,IAAI,EAACD,MAAM,CAAC;AAACnB,UAAU,GAACqB,GAAG,GAAC;EACxDC,MAAM,EAAC,IAAI,CAAClB,IAAI,CAACmB,IAAI,CAAC,IAAI,CAACC,GAAG,EAAC;IAC7BN,IAAI;IAACE;GACN,CAAC,CAACK,IAAI,CACLC,UAAU,CAAC,IAAI,CAACC,WAAW,CAAC;CAE/B","names":["Injectable","Observable","LoadingService","constructor","providedIn","http","loadExternalScript","script","document","createElement","src","async","onload","head","appendChild","removeExternalScript","querySelector","remove","ajClasse","name","String","prof","any","return","post","url","pipe","catchError","handleError"],"sourceRoot":"","sources":["C:\\Users\\Mehdi\\Desktop\\Angular\\my-dashboard\\src\\app\\loading.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n  private readonly url=\"http://localhost:9000/api/matiere\";\n  constructor(constructor(private http:HttpClient) { }) { }\n\n  loadExternalScript() {\n    const script = document.createElement('script');\n    script.src = 'https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.8.1/flowbite.min.js';\n    script.async = true;\n    script.onload = () => {\n      // Script has loaded, you can now use its functionality\n      // Initialize any required functionality from the script\n    };\n    document.head.appendChild(script);\n  }\n  removeExternalScript() {\n    // If needed, remove the script element from the DOM when the component is destroyed\n    const script = document.querySelector('[src=\"https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.8.1/flowbite.min.js\"]');\n    if (script) {\n      script.remove();\n    }\n  }\n  public ajClasse(name: String, prof:String):Observable<any>{\n    return this.http.post(this.url,{\n      name,prof\n    }).pipe(\n      catchError(this.handleError)\n    )\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}