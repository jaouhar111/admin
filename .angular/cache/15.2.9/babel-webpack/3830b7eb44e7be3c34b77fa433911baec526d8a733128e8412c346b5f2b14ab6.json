{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet HomeComponent = class HomeComponent {\n  constructor(userService, att) {\n    this.userService = userService;\n    this.att = att;\n    this.students = [];\n    this.Teachers = [];\n    this.attemp = [];\n    this.attstu = [];\n  }\n  ngOnInit() {\n    this.getStudent();\n    this.getProf();\n    this.getattEmp();\n    this.getattStu();\n    this.presentPercentage = this.attstu.length / this.students.length * 100;\n  }\n  getStudent() {\n    this.userService.getStudent().subscribe(data => {\n      // Filter users by role 'student'\n      this.students = data.filter(user => user.role === 'Student');\n      console.log(this.students);\n    });\n  }\n  getProf() {\n    this.userService.getTeacher().subscribe(data => {\n      // Filter users by role 'student'\n      this.Teachers = data.filter(user => user.role !== 'Student');\n      //console.log(\"all teachers\"+JSON.stringify(this.Teachers));\n    });\n  }\n\n  getattEmp() {\n    this.att.getAllAttendance().subscribe(data => {\n      const uniqueNames = new Set();\n      // Filter users by role 'student'\n      this.attemp = data.filter(user => user.status === 'Present').filter(user => user.iduser.role !== 'Student').filter(user => {\n        // Check if the name is not already in the Set\n        if (!uniqueNames.has(user.iduser.name)) {\n          // Add the name to the Set\n          uniqueNames.add(user.iduser.name);\n          return true;\n        }\n        return false;\n      });\n      //console.log(\"attendance employee\"+JSON.stringify(this.attemp) );\n    });\n  }\n\n  getattStu() {\n    this.att.getAllAttendance().subscribe(data => {\n      const uniqueNames = new Set();\n      // Filter users by role 'student'\n      this.attstu = data.filter(user => user.status === 'Absent').filter(user => user.iduser.role === 'Student').filter(user => {\n        // Check if the name is not already in the Set\n        if (!uniqueNames.has(user.iduser.name)) {\n          // Add the name to the Set\n          uniqueNames.add(user.iduser.name);\n          return true;\n        }\n        return false;\n      });\n      console.log(\"attendance student\" + JSON.stringify(this.attstu));\n    });\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAU1C,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAMxBC,YAAoBC,WAA8B,EAASC,GAAqB;IAA5D,gBAAW,GAAXD,WAAW;IAA4B,QAAG,GAAHC,GAAG;IAJ9D,aAAQ,GAAY,EAAE;IACtB,aAAQ,GAAU,EAAE;IACpB,WAAM,GAAe,EAAE;IACvB,WAAM,GAAe,EAAE;EAC2D;EAClFC,QAAQ;IACN,IAAI,CAACC,UAAU,EAAE;IACjB,IAAI,CAACC,OAAO,EAAE;IACd,IAAI,CAACC,SAAS,EAAE;IAChB,IAAI,CAACC,SAAS,EAAE;IAEhB,IAAI,CAACC,iBAAiB,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,GAAG,IAAI,CAACC,QAAQ,CAACD,MAAM,GAAI,GAAG;EAC5E;EACAN,UAAU;IACR,IAAI,CAACH,WAAW,CAACG,UAAU,EAAE,CAC9BQ,SAAS,CAAEC,IAAa,IAAI;MAC3B;MACA,IAAI,CAACF,QAAQ,GAAGE,IAAI,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,SAAS,CAAC;MAC5DC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,QAAQ,CAAC;IAE5B,CAAC,CAAC;EACF;EAEAN,OAAO;IACL,IAAI,CAACJ,WAAW,CAACkB,UAAU,EAAE,CAC5BP,SAAS,CAAEC,IAAa,IAAI;MAC3B;MACA,IAAI,CAACO,QAAQ,GAAGP,IAAI,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,SAAS,CAAC;MAC5D;IAGF,CAAC,CAAC;EACJ;;EAEAV,SAAS;IACP,IAAI,CAACJ,GAAG,CAACmB,gBAAgB,EAAE,CAC1BT,SAAS,CAAEC,IAAmB,IAAI;MACjC,MAAMS,WAAW,GAAG,IAAIC,GAAG,EAAU;MAErC;MACA,IAAI,CAACC,MAAM,GAAGX,IAAI,CACjBC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACU,MAAM,KAAK,SAAS,CAAC,CACzCX,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACW,MAAM,CAACV,IAAI,KAAK,SAAS,CAAC,CAC9CF,MAAM,CAACC,IAAI,IAAG;QACb;QACA,IAAI,CAACO,WAAW,CAACK,GAAG,CAACZ,IAAI,CAACW,MAAM,CAACE,IAAI,CAAC,EAAE;UACtC;UACAN,WAAW,CAACO,GAAG,CAACd,IAAI,CAACW,MAAM,CAACE,IAAI,CAAC;UACjC,OAAO,IAAI;;QAEb,OAAO,KAAK;MACd,CAAC,CAAC;MAEF;IAEF,CAAC,CAAC;EACJ;;EACArB,SAAS;IACP,IAAI,CAACL,GAAG,CAACmB,gBAAgB,EAAE,CAC1BT,SAAS,CAAEC,IAAmB,IAAI;MACjC,MAAMS,WAAW,GAAG,IAAIC,GAAG,EAAU;MAErC;MACA,IAAI,CAACd,MAAM,GAAGI,IAAI,CACjBC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACU,MAAM,KAAK,QAAQ,CAAC,CACxCX,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACW,MAAM,CAACV,IAAI,KAAK,SAAS,CAAC,CAC9CF,MAAM,CAACC,IAAI,IAAG;QACb;QACA,IAAI,CAACO,WAAW,CAACK,GAAG,CAACZ,IAAI,CAACW,MAAM,CAACE,IAAI,CAAC,EAAE;UACtC;UACAN,WAAW,CAACO,GAAG,CAACd,IAAI,CAACW,MAAM,CAACE,IAAI,CAAC;UACjC,OAAO,IAAI;;QAEb,OAAO,KAAK;MACd,CAAC,CAAC;MAEFX,OAAO,CAACC,GAAG,CAAC,oBAAoB,GAACY,IAAI,CAACC,SAAS,CAAC,IAAI,CAACtB,MAAM,CAAC,CAAE;IAEhE,CAAC,CAAC;EACJ;CACD;AAlFYV,aAAa,eALzBD,SAAS,CAAC;EACTkC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,GACWnC,aAAa,CAkFzB;SAlFYA,aAAa","names":["Component","HomeComponent","constructor","userService","att","ngOnInit","getStudent","getProf","getattEmp","getattStu","presentPercentage","attstu","length","students","subscribe","data","filter","user","role","console","log","getTeacher","Teachers","getAllAttendance","uniqueNames","Set","attemp","status","iduser","has","name","add","JSON","stringify","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Mehdi\\Desktop\\Angular\\my-dashboard\\src\\app\\pages\\home\\home.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UserServiceService } from 'src/app/user-service.service';\nimport { IUser, IAttendance } from '../user';\nimport { AttendanceService } from 'src/app/attendance.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  presentPercentage:any\n  students: IUser[] = [];\n  Teachers: any[] = [];\n  attemp:IAttendance[]=[];\n  attstu:IAttendance[]=[];\n  constructor(private userService:UserServiceService,private att:AttendanceService){}\n  ngOnInit(): void {\n    this.getStudent();\n    this.getProf();\n    this.getattEmp();\n    this.getattStu();\n\n    this.presentPercentage = (this.attstu.length / this.students.length) * 100;\n  }\n  getStudent(){\n    this.userService.getStudent()\n  .subscribe((data: IUser[]) => {\n    // Filter users by role 'student'\n    this.students = data.filter(user => user.role === 'Student');\n    console.log(this.students);\n    \n  });\n  }\n\n  getProf(){\n    this.userService.getTeacher()\n    .subscribe((data: IUser[]) => {\n      // Filter users by role 'student'\n      this.Teachers = data.filter(user => user.role !== 'Student');\n      //console.log(\"all teachers\"+JSON.stringify(this.Teachers));\n      \n\n    });\n  }\n\n  getattEmp(){\n    this.att.getAllAttendance()\n    .subscribe((data: IAttendance[]) => {\n      const uniqueNames = new Set<string>();\n      \n      // Filter users by role 'student'\n      this.attemp = data\n      .filter(user => user.status === 'Present')\n      .filter(user => user.iduser.role !== 'Student')\n      .filter(user => {\n        // Check if the name is not already in the Set\n        if (!uniqueNames.has(user.iduser.name)) {\n          // Add the name to the Set\n          uniqueNames.add(user.iduser.name);\n          return true;\n        }\n        return false;\n      });\n      \n      //console.log(\"attendance employee\"+JSON.stringify(this.attemp) );\n      \n    });\n  }\n  getattStu(){\n    this.att.getAllAttendance()\n    .subscribe((data: IAttendance[]) => {\n      const uniqueNames = new Set<string>();\n      \n      // Filter users by role 'student'\n      this.attstu = data\n      .filter(user => user.status === 'Absent')\n      .filter(user => user.iduser.role === 'Student')\n      .filter(user => {\n        // Check if the name is not already in the Set\n        if (!uniqueNames.has(user.iduser.name)) {\n          // Add the name to the Set\n          uniqueNames.add(user.iduser.name);\n          return true;\n        }\n        return false;\n      });\n      \n      console.log(\"attendance student\"+JSON.stringify(this.attstu) );\n      \n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}