{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AttendanceComponent = class AttendanceComponent {\n  constructor(Cla, att) {\n    this.Cla = Cla;\n    this.att = att;\n    this.today = new Date();\n    this.cla = 'Classe A';\n    this.selectedStatus = [];\n    this.Classes = [];\n    //Students:IClassroom[]=[]\n    this.filteredList = [];\n  }\n  ngOnInit() {\n    this.Cla.getClasse().subscribe(classe => {\n      this.Classes = classe;\n      this.updateFilteredList();\n    });\n  }\n  updateFilteredList() {\n    this.filteredList = this.Classes.filter(classroom => classroom.name === this.cla);\n    console.log(this.filteredList);\n  }\n  onSubmit() {\n    console.log('Before loop: selectedStatus', this.selectedStatus);\n    for (const statusData of this.selectedStatus) {\n      console.log('Inside loop: statusData', statusData);\n      const {\n        studentId,\n        status\n      } = statusData;\n      // Check if both studentId and status are defined\n      if (studentId && status) {\n        // Create an attendance object based on the selected data\n        const attendanceData = {\n          iduser: studentId,\n          status: status\n        };\n        console.log('Sending attendanceData', attendanceData);\n        // Send the attendance data for this student\n        this.att.createAttendance(attendanceData).subscribe(response => {\n          // Handle the response from the API if needed\n          console.log('API response:', response);\n        });\n      } else {\n        console.error('Both studentId and status must be provided for each student.');\n      }\n    }\n    console.log('After loop');\n  }\n};\nAttendanceComponent = __decorate([Component({\n  selector: 'app-attendance',\n  templateUrl: './attendance.component.html',\n  styleUrls: ['./attendance.component.css']\n})], AttendanceComponent);\nexport { AttendanceComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAW1C,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAO9BC,YAAoBC,GAAiB,EAASC,GAAqB;IAA/C,QAAG,GAAHD,GAAG;IAAuB,QAAG,GAAHC,GAAG;IANjD,UAAK,GAAS,IAAIC,IAAI,EAAE;IACxB,QAAG,GAAQ,UAAU;IACrB,mBAAc,GAA4C,EAAE;IAC5D,YAAO,GAAiB,EAAE;IAC1B;IACA,iBAAY,GAAiB,EAAE;EACsC;EAErEC,QAAQ;IAEN,IAAI,CAACH,GAAG,CAACI,SAAS,EAAE,CACnBC,SAAS,CAACC,MAAM,IAAG;MAClB,IAAI,CAACC,OAAO,GAAGD,MAAM;MAErB,IAAI,CAACE,kBAAkB,EAAE;IAC3B,CAAC,CAAC;EAEJ;EACAA,kBAAkB;IAChB,IAAI,CAACC,YAAY,GAAG,IAAI,CAACF,OAAO,CAACG,MAAM,CAAEC,SAAS,IAAKA,SAAS,CAACC,IAAI,KAAK,IAAI,CAACC,GAAG,CAAC;IACnFC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,YAAY,CAAC;EAChC;EAEAO,QAAQ;IACNF,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAE,IAAI,CAACE,cAAc,CAAC;IAE/D,KAAK,MAAMC,UAAU,IAAI,IAAI,CAACD,cAAc,EAAE;MAC5CH,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEG,UAAU,CAAC;MAElD,MAAM;QAAEC,SAAS;QAAEC;MAAM,CAAE,GAAGF,UAAU;MAExC;MACA,IAAIC,SAAS,IAAIC,MAAM,EAAE;QACvB;QACA,MAAMC,cAAc,GAAG;UACrBC,MAAM,EAAEH,SAAS;UACjBC,MAAM,EAAEA;SACT;QAEDN,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEM,cAAc,CAAC;QAErD;QACA,IAAI,CAACpB,GAAG,CAACsB,gBAAgB,CAACF,cAAc,CAAC,CAAChB,SAAS,CAACmB,QAAQ,IAAG;UAC7D;UACAV,OAAO,CAACC,GAAG,CAAC,eAAe,EAAES,QAAQ,CAAC;QACxC,CAAC,CAAC;OACH,MAAM;QACLV,OAAO,CAACW,KAAK,CAAC,8DAA8D,CAAC;;;IAIjFX,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EAC3B;CACD;AAtDYjB,mBAAmB,eAL/BD,SAAS,CAAC;EACT6B,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,GACW9B,mBAAmB,CAsD/B;SAtDYA,mBAAmB","names":["Component","AttendanceComponent","constructor","Cla","att","Date","ngOnInit","getClasse","subscribe","classe","Classes","updateFilteredList","filteredList","filter","classroom","name","cla","console","log","onSubmit","selectedStatus","statusData","studentId","status","attendanceData","iduser","createAttendance","response","error","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Mehdi\\Desktop\\Angular\\my-dashboard\\src\\app\\pages\\attendance\\attendance.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ClasseService } from 'src/app/classe.service';\nimport { IClassroom, IUser } from '../user';\nimport { AttendanceService } from 'src/app/attendance.service';\n\n\n@Component({\n  selector: 'app-attendance',\n  templateUrl: './attendance.component.html',\n  styleUrls: ['./attendance.component.css']\n})\nexport class AttendanceComponent implements OnInit {\n  today: Date = new Date();\n  cla:String='Classe A'\n  selectedStatus: { studentId: string, status: string }[] = [];\n  Classes: IClassroom[] = [];\n  //Students:IClassroom[]=[]\n  filteredList: IClassroom[] = [];\n  constructor(private Cla:ClasseService,private att:AttendanceService){}\n  \n  ngOnInit(): void {\n    \n    this.Cla.getClasse()\n    .subscribe(classe =>{\n      this.Classes = classe;\n     \n      this.updateFilteredList()\n    });\n    \n  }\n  updateFilteredList() {\n    this.filteredList = this.Classes.filter((classroom) => classroom.name === this.cla);\n    console.log(this.filteredList);\n  }\n\n  onSubmit() {\n    console.log('Before loop: selectedStatus', this.selectedStatus);\n\n    for (const statusData of this.selectedStatus) {\n      console.log('Inside loop: statusData', statusData);\n  \n      const { studentId, status } = statusData;\n  \n      // Check if both studentId and status are defined\n      if (studentId && status) {\n        // Create an attendance object based on the selected data\n        const attendanceData = {\n          iduser: studentId,\n          status: status,\n        };\n  \n        console.log('Sending attendanceData', attendanceData);\n  \n        // Send the attendance data for this student\n        this.att.createAttendance(attendanceData).subscribe(response => {\n          // Handle the response from the API if needed\n          console.log('API response:', response);\n        });\n      } else {\n        console.error('Both studentId and status must be provided for each student.');\n      }\n    }\n  \n    console.log('After loop');\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}