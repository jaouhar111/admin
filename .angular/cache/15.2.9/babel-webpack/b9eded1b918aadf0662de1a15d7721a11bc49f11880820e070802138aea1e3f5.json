{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AppComponent = class AppComponent {\n  constructor(userService, router) {\n    this.userService = userService;\n    this.router = router;\n    this.title = 'my-dashboard';\n  }\n  navigateToCurrentRoute() {\n    const currentUrl = this.router.url;\n    // Navigate to the same route to reload the component\n    this.router.navigateByUrl('/', {\n      skipLocationChange: true\n    }).then(() => {\n      this.router.navigate([currentUrl]);\n    });\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOlC,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAEvBC,YAAoBC,WAA8B,EAASC,MAAa;IAApD,gBAAW,GAAXD,WAAW;IAA4B,WAAM,GAANC,MAAM;IADjE,UAAK,GAAG,cAAc;EACqD;EAC3EC,sBAAsB;IACpB,MAAMC,UAAU,GAAG,IAAI,CAACF,MAAM,CAACG,GAAG;IAElC;IACA,IAAI,CAACH,MAAM,CAACI,aAAa,CAAC,GAAG,EAAE;MAAEC,kBAAkB,EAAE;IAAI,CAAE,CAAC,CAACC,IAAI,CAAC,MAAK;MACrE,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC,CAACL,UAAU,CAAC,CAAC;IACpC,CAAC,CAAC;EACJ;CACD;AAXYL,YAAY,eALxBD,SAAS,CAAC;EACTY,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,GACWb,YAAY,CAWxB;SAXYA,YAAY","names":["Component","AppComponent","constructor","userService","router","navigateToCurrentRoute","currentUrl","url","navigateByUrl","skipLocationChange","then","navigate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Mehdi\\Desktop\\Angular\\my-dashboard\\src\\app\\app.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'my-dashboard';\n  constructor(private userService:UserServiceService,private router:Router) {}\n  navigateToCurrentRoute() {\n    const currentUrl = this.router.url;\n\n    // Navigate to the same route to reload the component\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\n      this.router.navigate([currentUrl]);\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}